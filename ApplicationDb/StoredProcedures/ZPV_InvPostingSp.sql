/****** Object:  StoredProcedure [dbo].[ZPV_InvPostingSp]    Script Date: 10/29/2014 12:13:11 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ZPV_InvPostingSp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ZPV_InvPostingSp]
GO

/****** Object:  StoredProcedure [dbo].[ZPV_InvPostingSp]    Script Date: 10/29/2014 12:13:11 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




/* $Header: /ApplicationDB/Stored Procedures/InvPostingSp.sp 88    10/27/13 11:25p Ehe $ */
/*
***************************************************************
*                                                             *
*                           NOTICE                            *
*                                                             *
*   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
*   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS AFFILIATES   *
*   OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED WITHOUT PRIOR  *
*   WRITTEN PERMISSION. LICENSED CUSTOMERS MAY COPY AND       *
*   ADAPT THIS SOFTWARE FOR THEIR OWN USE IN ACCORDANCE WITH  *
*   THE TERMS OF THEIR SOFTWARE LICENSE AGREEMENT.            *
*   ALL OTHER RIGHTS RESERVED.                                *
*                                                             *
*   (c) COPYRIGHT 2010 INFOR.  ALL RIGHTS RESERVED.           *
*   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
*   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
*   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL RIGHTS        *
*   RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE         *
*   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
*                                                             *
*************************************************************** 
*/
/* $Archive: /ApplicationDB/Stored Procedures/InvPostingSp.sp $
 *
 * SL9.00 88 170518 Ehe Sun Oct 27 23:25:05 2013
 * Discount date wrongly move to the month end for a Order invoice on AR posted transaction detail when all related discount days are 0 on billing term
 * 170518
 * Change List:
 * Add the logic to set discount date when @DiscDays = 0 And @ProxDiscDay = 0.
 *
 * SL8.04 87 163189 jzhou Mon Jun 24 06:04:59 2013
 * The value of Builer Invoice is NULL at A/R Payment Distributions when the Invoice is generated by Invoice Builder
 * Issue 163189:
 * Add parameter @PostSite.
 * When insert into artran table, also insert the fields builder_inv_orig_site, builder_inv_num, post_site.
 *
 * SL8.04 86 162866 Sxu Tue Jun 04 05:02:03 2013
 * Zero Value Invoice is allocated Control Number
 * Issue 162866 - change the location of SET @IsControlNumberCreated = 1
 *
 * SL8.04 85 162866 Sxu Tue Jun 04 03:31:05 2013
 * Zero Value Invoice is allocated Control Number
 * Issue 162866 - change to call NextControlNumberSp when there is journal entry to created.
 *
 * SL8.04 84 RS5889 gwang Tue Apr 16 06:00:31 2013
 * RS5889 merge code block from Addon Tax Interface, EXTSSSVTXInvPostingSp
 *
 * SL8.04 83 RS5888 Lzhan Tue Mar 26 02:30:53 2013
 * RS5888: corrected module name for FSPM_MS.
 *
 * SL8.04 82 RS5888 Lzhan Thu Mar 14 22:41:42 2013
 * RS5888: added IsAddOnAvailabe logic to control FSP.
 *
 * SL8.04 81 RS2775 Bbai Mon Feb 25 04:38:15 2013
 * RS2775:
 * Remote call if posting invoice across sites.
 *
 * SL8.04 80 RS5566 Cliu Fri Oct 19 01:51:36 2012
 * Call IsAddonAvailable function (rather than checking for the existence of a CCI table) to determine whether to call the CCI SP.
 * RS5566
 *
 * SL8.04 79 150462 sturney Tue Aug 21 13:26:37 2012
 * Customer Discount Not Being Applied
 * Issue 150462
 *
 * SL8.04 78 151044 Phorne Thu Jul 12 16:58:29 2012
 * The field ?Discount Date? is showing the incorrect date for all Billing Terms when its Discount Days > 0
 * Issue 151044 - Corrected Discount Date calculation
 *
 * SL8.03 77 148119 Ltaylor2 Fri May 11 15:06:56 2012
 * 5325 - Pack and Ship design coding
 * Get arinv.shipment_id, insert into artran and export_arinv
 *
 * SL8.03 76 148637 Djackson Fri Apr 20 09:58:38 2012
 * The Disc Date is showing the incorrect date when Discount Day=0, Invoice Day(25) < Prox Discount Day(27)
 * 148637 - DiscDays 
 *
 * SL8.03 75 RS4902 Bli2 Sun Dec 26 22:00:47 2010
 * RS 4902 - also roll back the discount ytd for customer if the check is returned
 *
 * SL8.03 74 RS4902 Bli2 Tue Dec 14 01:03:05 2010
 * RS 4902
 *
 * SL8.03 73 RS4902 Bli2 Tue Dec 14 00:58:54 2010
 * RS 4902 - donot update sales_ytd, sales_ptd, posted_bal and last_inv when returned_check flag is 1
 *
 * SL8.02 72 128304 Cajones Tue Mar 16 17:04:08 2010
 * SSS hook needs updated in the InvPostingSp
 * Issue:128304, APAR:128304
 * Updated SSS hooks.
 *
 * SL8.02 71 rs4604 Jbrokl Wed Mar 10 10:54:47 2010
 * RS 4604 - Projects - Add fields for planned and Actual Freight, Misc Charges and total.
 *
 * SL8.02 70 rs4588 Dahn Thu Mar 04 14:36:37 2010
 * rs4588 copyright header changes
 *
 * SL8.01 69 121450 Cajones Fri May 29 15:59:33 2009
 * Add changes required for FS-Plus
 * Issue:121450, APAR:116514
 * Code has been added for FS-Plus.  Infor Incident 2368761 caused a new hook for FS-Plus in InvPostingSp. This hook protects against overlapping order numbers in Service Orders, Contracts, and Customer Orders.
 *
 * SL8.01 68 121258 calagappan Fri May 15 17:53:29 2009
 * Multi-currency progressive billings leaving differences in GL.
 * Create Progressive Bill adjustments when regular or consolidated invoice is posted.
 *
 * SL8.01 67 117020 pcoate Mon Jan 19 14:33:18 2009
 * Invoice BOD trigger errors out.
 * Issue 117020 - Corrected the 3rd parameter passed to the Invoice BOD integration RMC.
 *
 * SL8.01 66 116659 Djackson1 Thu Jan 15 13:11:23 2009
 * 116659 - Add ActionExpression to BOD Parameters
 *
 * SL8.01 65 114046 pgross Fri Oct 10 09:45:30 2008
 * Incorrect total invoice project when perform 'Create Invoice For Advance Payment'.
 * prevent Project Invoices from updating the customer On Order Balance
 *
 * SL8.01 64 107716 Dahn Wed Sep 17 11:25:36 2008
 * Code Cleanup: There is code that needs cleaned up within InvPostingSp related to functionality that appears to have been removed for issue 84553.
 * issue 107716: code clean up
 *
 * SL8.01 63 rs3953 Vlitmano Tue Aug 26 17:05:23 2008
 * RS3953 - Changed a Copyright header?
 *
 * SL8.01 62 113274 pcoate Tue Aug 26 14:25:46 2008
 * Issue 113274 - Added logic to handle multiple inv_hdr rows for the same invoice.
 *
 * SL8.01 61 rs3953 Vlitmano Mon Aug 18 15:26:54 2008
 * Changed a Copyright header information(RS3959)
 *
 * SL8.01 60 109670 Djackson1 Fri Jul 18 09:19:18 2008
 * Invoice XML not being created
 * 109670 BOD initialization Point Change
 *
 * SL8.01 59 RS4088 dgopi Tue May 20 04:38:39 2008
 * RS4088
 *
 * SL8.00 58 98490 ssalahud Wed Jan 02 09:49:56 2008
 * Invoice Distributions not= Posting Report not= Journal Entries - all three have different amounts
 * Issue 98490
 * Backed out changes made for the issue 98268.
 *
 * SL8.00 57 103799 pgross Mon Jul 30 08:19:48 2007
 * A/R Invoices that have currency gain/loss will not post when ExtFin is enabled
 * removed an invalid reference to ExtFinPostArinvd which used to handle Gain/Loss
 *
 * SL8.00 56 103568 hcl-kumarup Tue Jul 17 04:03:24 2007
 * XRef button next to the RMA # in the Order # field in SL7 does not work correctly.
 * Checked-in for issue 103568
 * Added a field "rma" in the INSERT INTO artran statement
 *
 * SL8.00 55 101387 hcl-kumarup Thu Apr 26 03:11:51 2007
 * Back-out fix for issue 100097 / APAR 106694
 * Checked-in for issue 101387
 * Backed-out fix for issue/APAR 100097/106694
 *
 * SL8.00 54 100097 hcl-kumarup Fri Mar 30 07:25:54 2007
 * AR Aging Report, the result in the fully paid Invoice still showing a domestic amount outstanding
 * Checked-in for issue 100097
 * Called up GainLossArSp to get the Gain/Loss amount due change in historical rate for Invoice and its payment
 *
 * SL8.00 53 98268 hcl-kumarup Wed Mar 21 08:49:11 2007
 * Include tax in price rounding problems - Unable to post invoice
 * Checked-in for issue 98268
 * In case of currency palces = 0 the rounding is applied to total credit amount after the totaling of its componets
 *
 * SL8.00 52 RS2968 nkaleel Fri Feb 23 03:10:42 2007
 * changing copyright information
 *
 * SL8.00 51 98847 pgross Fri Jan 26 15:37:56 2007
 * On Order Balance incorrect when do the RMA Credit against the fully shipment order
 * allow negative customer.order_bal
 *
 * SL8.00 50 98781 pgross Fri Jan 19 10:51:24 2007
 * On Order Balance displays negative amt for Over shipment and Post an invoice.
 * disallow negative customer order balance
 *
 * SL8.00 49 rs3371 Mkurian Tue Nov 07 07:34:16 2006
 * RS3371
 * References to arinv.curr_code and export_arinv.curr_code have been removed.
 *
 * SL8.00 48 97346 Clarsco Mon Oct 23 10:25:32 2006
 * Application Lock failurer fails to stop process
 * Fixed Bug 97346
 * Added @Severity Trap following NextControlNumberSp call.
 *
 * SL8.00 47 95933 Hcl-ajain Wed Aug 30 02:09:44 2006
 * Incorrect invoice amt after applied the fix of SL103513, SL103901
 * Issue # 95933
 * Used round function on individual amounts while calculating value of '@ForeignInvTotal ' instead of using round on summation of these values.
 *
 * SL8.00 46 95700 Hcl-ajain Tue Aug 08 09:18:18 2006
 * Invoices improperly distributed with taxes
 * Issue 95700
 * Used Rounding function for @ForeignInvTotal
 *
 * SL8.00 45 RS2968 prahaladarao.hs Tue Jul 11 09:08:55 2006
 * RS 2968, Name change CopyRight Update.
 *
 * SL8.00 44 93542 madhanprasad.s Mon Jun 19 05:39:55 2006
 * Right > Click Detail options for RMA Order Types does not launch expected information
 * Issue Number : 93542
 * Reverted back the changes made in the checkin with version 42,by removing the 'rma' column insertion into the artran table.
 *
 * SL8.00 43 91554 sivaprasad.b Thu Jun 01 05:16:42 2006
 * invoice number over 10 produces error even when length is set to 12
 * 91554
 * - Changed ISNUMERIC(..) for invoice numbers to dbo.IsInteger(..)
 *
 * SL8.00 42 93542 jabraham Tue May 30 07:16:05 2006
 * Right > Click Detail options for RMA Order Types does not launch expected information
 * ISSUE 93542
 * Added code to insert value of rma field while inserting data into artran table.
 *
 * SL8.00 41 93193 Hcl-dixichi Fri May 26 08:41:25 2006
 * Debit/Credit note not posting in Syteline when using External Financial interface.
 * Checked-in for issue 93193
 * Changed the INSERT statement for export tables (export_arinv,export_arinvd) to use @TSeq for inv_seq.
 *
 * SL8.00 40 93998 flagatta Mon May 01 13:28:01 2006
 * Manually Entered Credit is giving erroneous G/L entries
 * Use currCnvt to calculate @DomesticAmount for header.  93998
 *
 * SL8.00 39 93964 hcl-kumarup Fri Apr 28 06:56:50 2006
 * Distribution total does not match invoice total when using discount percent.
 * Checked in for Issue#93964
 * Set Currency place for Invoice Amount
 *
 * SL7.05 39 93964 hcl-kumarup Fri Apr 28 06:55:17 2006
 * Distribution total does not match invoice total when using discount percent.
 * Checked in for Issue#93964
 * Set Currency place for Invoice Amount
 *
 * SL7.05 38 93373 pgross Wed Mar 22 15:48:47 2006
 * Progressively Billings picking up the default A/P Account instead of A/R and when reversing, is booking entry to Gain/Loss account
 * avoid unbalanced journals when posting a negative invoice
 *
 * SL8.00 37 92052 hcl-kumarup Fri Feb 10 05:42:00 2006
 * AR Dist journal contains value in currency gain loss transaction that should be zero.
 * Checked in for Issue #92052
 * Changed RoundResult parameter value when calling CurrCnvtSp from InvPostingSp
 *
 * SL7.05 35 90527 hcl-amargt Wed Jan 11 06:46:58 2006
 * Attempt to remove inv_ms cursor for performance fix
 * Issue : 90527
 * 1. 'InvMsCrs' cursor replaced with an update statement.
 *
 * SL7.04 34 91818 NThurn Fri Jan 06 11:41:12 2006
 * Inserted standard External Touch Point call.  (RS3177)
 *
 * SL7.04 33 90282 Hcl-manobhe Wed Dec 28 05:06:20 2005
 * Code Cleanup
 * Issue 90282
 * Call to JourpostISp has been changed to call JourpostSp directly.
 *
 * SL7.04 32 91110 hcl-singind Mon Dec 26 04:53:37 2005
 * Issue #: 91110.
 * Added "WITH (READUNCOMMITTED)" to co Select Statement.
 *
 * SL7.04 31 88752 hcl-singind Fri Aug 26 07:40:22 2005
 * RS1228 Upgrade Localization for France
 * Issue # 88752.
 * Remove the following call to French stub from the SL7.04 base SP
 * ?IF OBJECT_ID('EXTFRInvPostingSp') IS NOT NULL?
 *
 * SL7.04 30 88654 Hcl-dixichi Wed Aug 24 05:43:38 2005
 * The conversion of the nvarchar value '3050000001' overflow an int column. Maximum integer value exceeded.
 * Checked-in for issue 88654
 * In the function 'Convert' changed the data type from int to bigint to support numeric credit memos greater than 2147483647(the numeric limit for int data type)
 *
 * SL7.04 29 86508 Hcl-sharpar Wed Mar 30 09:15:23 2005
 * Stub calls needed for French Localization
 * issue 86508
 * French Country Pack stub design RS 1249
 *
 * $NoKeywords: $
 */
CREATE PROCEDURE [dbo].[ZPV_InvPostingSp] (
  @PSessionID              RowPointerType
, @PCustNum                CustNumType
, @PInvNum                 InvNumType
, @PInvSeq                 ArInvSeqType
, @PJHeaderRowPointer      RowPointerType
, @PostExtFin              ListYesNoType OUTPUT
, @ExtFinOperationCounter  OperationCounterType OUTPUT
, @Infobar                 InfobarType    OUTPUT
, @ToSite                  SiteType = NULL
, @PostSite                SiteType = NULL
)
AS

   -- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_ZPV_InvPostingSp') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_ZPV_InvPostingSp'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      DECLARE @EXTGEN_Severity int
      EXEC @EXTGEN_Severity = @EXTGEN_SpName
         @PSessionID
         , @PCustNum
         , @PInvNum
         , @PInvSeq
         , @PJHeaderRowPointer
         , @PostExtFin OUTPUT
         , @ExtFinOperationCounter OUTPUT
         , @Infobar OUTPUT
         , @ToSite
         , @PostSite 
 
      -- ETP routine can RETURN 1 to signal that the remainder of this standard routine should now proceed:
      IF @EXTGEN_Severity <> 1
         RETURN @EXTGEN_Severity
   END
   -- End of Generic External Touch Point code.

DECLARE @Site SiteType
SELECT @Site = [site] FROM site
EXEC [dbo].[SetSiteSp] @Site, @Infobar OUTPUT
 
DECLARE
  @Severity INT
, @ParmsSite SiteType

SELECT @ParmsSite = site FROM parms with (readuncommitted)

SET @Severity = 0
SET @Infobar  = NULL

IF @ToSite IS NOT NULL AND @PostSite IS NULL
   SET @PostSite = @ParmsSite

IF @ParmsSite = @ToSite OR @ToSite IS NULL
BEGIN
   DECLARE
     @AmountToPost         GenericDecimalType
   , @ForAmtToPost         GenericDecimalType
   , @CurrentPeriod        FinPeriodType
   , @PeriodsRowPointer    RowPointerType
   , @FindCustNum          CustNumType
   , @FindCustSeq          CustSeqType
   , @TSeq                 ArinvSeqType
   , @TotCr                AmountType
   , @DomesticArinvdAmount GenericDecimalType
   , @TId                  JournalIdType
   , @AmountPosted         GenericDecimalType
   , @ForeignInvTotal      GenericDecimalType
   , @DomesticInvTotal     GenericDecimalType
   , @Adjust               GenericDecimalType
   , @DomesticAmount       GenericDecimalType
   , @DomesticDisc         GenericDecimalType
   , @TInvStaxSeq          GenericNoType
   , @GainLossAmount       GenericDecimalType
   , @IsOrderForProject ListYesNoType
   
   DECLARE
	 @SubKey					GenericKeyType
	,@ControlPrefix        JourControlPrefixType 
	,@ControlSite          SiteType
	,@ControlYear          FiscalYearType
	,@ControlPeriod        FinPeriodType
	,@ControlNumber        LastTranType

   SET @TInvStaxSeq          = 0
   SET @AmountToPost         = 0
   SET @ForAmtToPost         = 0
   set @IsOrderForProject = 0
   SET @DomesticDisc         = 0

   DECLARE
     @ShipCustaddrRowPointer RowPointerType
   , @ShipCustaddrState      StateType
   , @TaxparmsRowPointer     RowPointerType
   , @TaxparmsLastTaxReport1 DateType
   , @ArparmsRowPointer      RowPointerType
   , @ArparmsDiscAcct        AcctType
   , @ParmsRowPointer        RowPointerType
   , @ParmsEcReporting       ListYesNoType
   , @ParmsCountry           CountryType
   , @ArinvRowPointer        RowPointerType
   , @ArinvAcct              AcctType
   , @ArinvCustNum           CustNumType
   , @ArinvInvNum            InvNumType
   , @ArinvInvDate           DateType
   , @ArinvDueDate           DateType
   , @ArinvType              ArinvTypeType
   , @ArinvPostFromCo        ListYesNoType
   , @ArinvInvSeq            ArInvSeqType
   , @ArinvNoteExistsFlag    FlagNyType
   , @ArinvCoNum             CoNumType
   , @ArinvDoNum             DoNumType
   , @ArinvAcctUnit1         UnitCode1Type
   , @ArinvAcctUnit2         UnitCode2Type
   , @ArinvAcctUnit3         UnitCode3Type
   , @ArinvAcctUnit4         UnitCode4Type
   , @ArinvDescription       DescriptionType
   , @ArinvAmount            AmountType
   , @ArinvMiscCharges       AmountType
   , @ArinvSalesTax          AmountType
   , @ArinvSalesTax2         AmountType
   , @ArinvFreight           AmountType
   , @ArinvExchRate          ExchRateType
   , @ArinvFixedRate         ListYesNoType
   , @ArinvPayType           CustPayTypeType
   , @ArinvRef               ReferenceType
   , @ArinvTermsCode         TermsCodeType
   , @ArinvUseExchRate       ListYesNoType
   , @ArinvTaxCode1          TaxCodeType
   , @ArinvTaxCode2          TaxCodeType
   , @ArinvReturnedCheck     ListYesNoType
   , @ArinvShipmentId        ShipmentIdType
   , @ChartRowPointer        RowPointerType
   , @CustomerRowPointer     RowPointerType
   , @CustomerOrderBal       AmountType
   , @CustomerPostedBal      AmountType
   , @CustomerSalesYtd       AmountType
   , @CustomerSalesPtd       AmountType
   , @CustomerDiscYtd        AmountType
   , @CustomerLastInv        DateType
   , @CustaddrRowPointer     RowPointerType
   , @CustaddrCorpCust       CustNumType
   , @CustaddrCountry        CountryType
   , @CustaddrCurrCode       CurrCodeType
   , @CustaddrCorpCred       ListYesNoType
   , @CurrencyRowPointer     RowPointerType
   , @CurrencyPlaces         DecimalPlacesType
   , @InvHdrRowPointer       RowPointerType
   , @InvHdrCoNum            CoNumType
   , @InvHdrCustNum          CustNumType
   , @InvHdrCustSeq          CustSeqType
   , @InvHdrInvSeq           InvSeqType
   , @InvHdrInvNum           InvNumType
   , @InvHdrInvDate          DateType
   , @InvHdrTaxDate          DateType
   , @InvHdrTermsCode        TermsCodeType
   , @InvHdrUseExchRate      ListYesNoType
   , @InvHdrTaxCode1         TaxCodeType
   , @InvHdrTaxCode2         TaxCodeType
   , @InvHdrMiscCharges      AmountType
   , @InvHdrFreight          AmountType
   , @InvHdrPrice            AmountType
   , @InvHdrState            StateType
   , @InvHdrBillType         BillingTypeType
   , @InvHdrEcCode           EcCodeType
   , @InvHdrExchRate         ExchRateType
   , @CoRowPointer           RowPointerType
   , @CoCustNum              CustNumType
   , @CoCustSeq              CustSeqType
   , @CohRowPointer          RowPointerType
   , @CohCustNum             CustNumType
   , @CohCustSeq             CustSeqType
   , @ArtranRowPointer       RowPointerType
   , @ArtranInvNum           InvNumType
   , @ArtranCustNum          CustNumType
   , @ArtranActive           ListYesNoType
   , @ArtranInvSeq           ArInvSeqType
   , @ArtranNoteExistFlag    FlagNyType
   , @ArtranDiscDate         DateType
   , @ArtranIssueDate        DateType
   , @ArtranDiscAmt          AmountType
   , @ArtranType             ArtranTypeType
   , @ArtranCoNum            CoNumType
   , @ArtranDoNum            DoNumType
   , @ArtranInvDate          DateType
   , @ArtranDueDate          DateType
   , @ArtranAcct             AcctType
   , @ArtranAcctUnit1        UnitCode1Type
   , @ArtranAcctUnit2        UnitCode2Type
   , @ArtranAcctUnit3        UnitCode3Type
   , @ArtranAcctUnit4        UnitCode4Type
   , @ArtranDescription      DescriptionType
   , @ArtranCorpCust         CustNumType
   , @ArtranPostFromCo       ListYesNoType
   , @ArtranFixedRate        ListYesNoType
   , @ArtranPayType          CustPayTypeType
   , @ArtranAmount           AmountType
   , @ArtranMiscCharges      AmountType
   , @ArtranSalesTax         AmountType
   , @ArtranSalesTax2        AmountType
   , @ArtranFreight          AmountType
   , @ArtranNoteExistsFlag   FlagNyType
   , @ArtranRef              ReferenceType
   , @ArtranExchRate         ExchRateType
   , @ArtranShipmentId       ShipmentIdType
   , @TermsRowPointer        RowPointerType
   , @TermsDiscDays          DiscDaysType
   , @TermsDiscPct           ApDiscType
   , @ProjInvHdrRowPointer   RowPointerType
   , @CountryRowPointer      RowPointerType
   , @CountryEcCode          EcCodeType
   , @XCountryRowPointer     RowPointerType
   , @XCountryEcCode         EcCodeType
   , @ArinvdRowPointer       RowPointerType
   , @ArinvdRefNum           CoNumType
   , @ArinvdRefLineSuf       CoLineType
   , @ArinvdRefRelease       CoReleaseType
   , @ArinvdDistSeq          ArDistSeqType
   , @ArinvdAmount           AmountType
   , @ArinvdAcct             AcctType
   , @ArinvdAcctUnit1        UnitCode1Type
   , @ArinvdAcctUnit2        UnitCode2Type
   , @ArinvdAcctUnit3        UnitCode3Type
   , @ArinvdAcctUnit4        UnitCode4Type
   , @ArinvdTaxSystem        TaxSystemType
   , @ArinvdTaxBasis         AmountType
   , @ArinvdTaxCode          TaxCodeType
   , @ArinvdTaxCodeE         TaxCodeType
   , @TaxcodeRowPointer      RowPointerType
   , @TaxcodeTaxRate         TaxRateType
   , @TaxcodeTaxJur          TaxJurType
   , @InvStaxInvNum          InvNumType
   , @InvStaxInvSeq          InvSeqType
   , @InvStaxSeq             StaxSeqType
   , @InvStaxInvDate         DateType
   , @InvStaxTaxCode         TaxCodeType
   , @InvStaxStaxAcct        AcctType
   , @InvStaxStaxAcctUnit1   UnitCode1Type
   , @InvStaxStaxAcctUnit2   UnitCode2Type
   , @InvStaxStaxAcctUnit3   UnitCode3Type
   , @InvStaxStaxAcctUnit4   UnitCode4Type
   , @InvStaxSalesTax        AmountType
   , @InvStaxCustNum         CustNumType
   , @InvStaxCustSeq         CustSeqType
   , @InvStaxTaxBasis        AmountType
   , @InvStaxTaxSystem       TaxSystemType
   , @InvStaxTaxRate         TaxRateType
   , @InvStaxTaxJur          TaxJurType
   , @InvStaxTaxCodeE        TaxCodeType
   , @ExtFinSite             SiteType        -- Extfin
   , @ExtFinParmsRowPointer  RowPointerType  -- Extfin
   , @ExtFinUseExternalAR    ListYesNoType   -- Extfin
   , @ExtFinUseExtFin        ListYesNoType   -- Extfin
   , @ArinvRma               ListYesNoType   -- Extfin
   , @ArinvDraftPrintFlag    ListYesNoType   -- Extfin
   , @ArinvdInvSeq           ArInvSeqType    -- Extfin
   , @ArinvdRefType          RefTypeOType    -- Extfin
   , @ExtFinRowPointer        RowPointerType       -- Extfin
   , @ArinvdNoteExistsFlag    FlagNyType           -- Extfin
   , @LastSeq     JournalSeqType
   , @JournalRowPointer   RowPointerType
   , @ArinvApprovalStatus ListPendingApprovedRejectedType
   , @ArinvApplyToInvNum  InvNumType
   , @ArinvBuilderInvOrigSite  SiteType
   , @ArinvBuilderInvNum       BuilderInvNumType
   , @ArtranBuilderInvOrigSite SiteType
   , @ArtranBuilderInvNum      BuilderInvNumType
   , @ArtranPostSite           SiteType

   DECLARE
      @UseMultipleDueDates ListYesNoType
    , @MultiTermsRowPointer RowPointerType
    , @TotDueDateAmounts AmountType
    , @TotArinvAmount AmountType
    , @ExportBatchID  OperationCounterType
    , @ExportBatchSeq OperationCounterType
    , @ArTermsDueCustNum CustNumType
    , @ArTermsDueInvNum  InvNumType
    , @ArTermsDueInvSeq  InvSeqType
    , @ArTermsDueSeq     SequenceType
    , @ArTermsDueDueDate DateType
    , @ArTermsDuePercent TermsPercentType
    , @ArTermsDueAmount  AmountType

   DECLARE
      @ProjNum                ProjNumType
    , @AdvPmtDeductedAmt      AmountType
    , @AdvPmtToBeDeductedAmt  AmountType
    , @RowPointer             RowPointerType
    , @ARExistsFlag           ListYesNoType
    , @CurrparmsCurrCode      CurrCodeType

   DECLARE
      @adv_pmt_deducted_amt_total        AmtTotType
    , @adv_pmt_to_be_deducted_amt_total  AmtTotType
    , @adv_pmt_invoiced_amt_total        AmtTotType

   DECLARE
      @proxdiscday int
    , @ProxDiscMonthToForward int

   DECLARE @SSSFSInclSROInOnOrdBal   ListYesNoType   -- SSS added
   DECLARE @IsControlNumberCreated   ListYesNoType

   SET @SSSFSInclSROInOnOrdBal = 1   -- SSS added
   SET @ARExistsFlag = 0
   SET @TId = 'AR Dist'
   SET @IsControlNumberCreated = 0

   SELECT
     @CurrparmsCurrCode = currparms.curr_code
   FROM currparms


   SET @TaxparmsRowPointer     = NULL
   SET @TaxparmsLastTaxReport1 = NULL

   SELECT
     @TaxparmsRowPointer     = taxparms.RowPointer
   , @TaxparmsLastTaxReport1 = taxparms.last_tax_report_1
   FROM taxparms_mst taxparms

   IF @TaxparmsRowPointer IS NULL
   BEGIN
      EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
      , 'I=NoExistFor'
      , '@taxparms'
      RETURN @Severity
   END

   SET @ArparmsRowPointer = NULL

   SELECT
    @ArparmsRowPointer = arparms.RowPointer
   ,@ArparmsDiscAcct   = arparms.disc_acct
   FROM arparms_mst arparms

   IF @ArparmsRowPointer IS NULL
   BEGIN
      EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
      , 'I=NoExistFor'
      , '@arparms'
      RETURN @Severity
   END

   SET @ParmsRowPointer  = NULL

   SELECT
     @ParmsRowPointer  = parms.RowPointer
   , @ParmsEcReporting = parms.ec_reporting
   , @ParmsCountry     = parms.country
   , @ParmsSite        = parms.site
   FROM parms_mst parms

   IF @ParmsRowPointer IS NULL
   BEGIN
      EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
      , 'I=NoExistFor'
      , '@parms'
      RETURN @Severity
   END

   -- Begin ExtFin changes
   SET @ExtFinParmsRowPointer = NULL

   SELECT
     @ExtFinParmsRowPointer = extfin_parms.RowPointer
   --, @ExtFinSite            = extfin_parms.extfin_site
   , @ExtFinUseExternalAR   = extfin_parms.use_external_ar
   , @ExtFinUseExtFin       = extfin_parms.use_extfin
   FROM extfin_parms_mst extfin_parms

   IF @ExtFinParmsRowPointer IS NULL
   BEGIN
      EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
      , 'I=NoExistFor'
      , '@extfin_parms'
      RETURN @Severity
   END
   -- End ExtFin changes

   SET @ArinvRowPointer = NULL

   IF (dbo.IsInteger(@PInvNum)=1 AND CONVERT(BIGINT,@PInvNum)=0)
      SET @PInvNum = '0'

   SELECT
     @ArinvRowPointer      = arinv.RowPointer
   , @ArinvAcct            = arinv.acct
   , @ArinvCustNum         = arinv.cust_num
   , @ArinvInvNum          = arinv.inv_num
   , @ArinvInvDate         = arinv.inv_date
   , @ArinvDueDate         = arinv.due_date
   , @ArinvType            = arinv.type
   , @ArinvPostFromCo      = arinv.post_from_co
   , @ArinvInvSeq          = arinv.inv_seq
   , @ArinvCoNum           = arinv.co_num
   , @ArinvDoNum           = arinv.do_num
   , @ArinvAcctUnit1       = arinv.acct_unit1
   , @ArinvAcctUnit2       = arinv.acct_unit2
   , @ArinvAcctUnit3       = arinv.acct_unit3
   , @ArinvAcctUnit4       = arinv.acct_unit4
   , @ArinvDescription     = arinv.description
   , @ArinvAmount          = arinv.amount
   , @ArinvMiscCharges     = arinv.misc_charges
   , @ArinvSalesTax        = arinv.sales_tax
   , @ArinvSalesTax2       = arinv.sales_tax_2
   , @ArinvFreight         = arinv.freight
   , @ArinvExchRate        = arinv.exch_rate
   , @ArinvFixedRate       = arinv.fixed_rate
   , @ArinvPayType         = arinv.pay_type
   , @ArinvRef             = arinv.ref
   , @ArinvTermsCode       = arinv.terms_code
   , @ArinvUseExchRate     = arinv.use_exch_rate
   , @ArinvTaxCode1        = arinv.tax_code1
   , @ArinvTaxCode2        = arinv.tax_code2
   , @ArinvNoteExistsFlag  = arinv.NoteExistsFlag
   , @ArinvRma             = arinv.rma              -- Extfin
   , @ArinvDraftPrintFlag  = arinv.draft_print_flag -- Extfin
   , @ArinvApprovalStatus  = arinv.approval_status  -- Extfin
   , @ArinvApplyToInvNum   = arinv.apply_to_inv_num
   , @ArinvReturnedCheck   = arinv.returned_check
   , @ArinvShipmentId      = arinv.shipment_id
   , @ArinvBuilderInvOrigSite = arinv.builder_inv_orig_site
   , @ArinvBuilderInvNum   = arinv.builder_inv_num
   FROM arinv_mst arinv WITH (UPDLOCK)
   WHERE arinv.cust_num = @PCustNum
   AND   arinv.inv_num  = @PInvNum
   AND   arinv.inv_seq  = @PInvSeq

   IF @ArinvRowPointer IS NULL
   BEGIN
      EXEC dbo.MsgAppSp @Infobar OUTPUT
      , 'E=NoExist3'
      , '@arinv'
      , '@arinv.cust_num'
      , @PCustNum
      , '@arinv.inv_num'
      , @PInvNum
      , '@arinv.inv_seq'
      , @PInvSeq
      
      RETURN @Severity
   END

   SET @AmountPosted = 0

   SET @ChartRowPointer = NULL

   SELECT
     @ChartRowPointer = chart.RowPointer
   FROM chart_mst chart
   WHERE chart.acct = @ArinvAcct

   IF @ChartRowPointer IS NULL OR @ArinvAcct IS NULL
   BEGIN
      EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
                       , 'E=NoExistFor3'
                       , '@chart'
                       , '@arinv'
                       , '@arinv.cust_num'
                       , @ArinvCustNum
                       , '@arinv.inv_num'
                       , @ArinvInvNum
                       , '@arinv.acct'
                       , @ArinvAcct

      RETURN @Severity
   END

   EXEC @Severity = dbo.PerGetSp
                      @Date              = @ArinvInvDate
                    , @CurrentPeriod     = @CurrentPeriod     OUTPUT
                    , @PeriodsRowPointer = @PeriodsRowPointer OUTPUT
                    , @Site              = @ParmsSite
                    , @Infobar           = @Infobar           OUTPUT

   IF @Severity <> 0
      RETURN @Severity

   SET @CustomerRowPointer = NULL

   SELECT
     @CustomerRowPointer = customer.RowPointer
   , @CustomerSalesYtd   = customer.sales_ytd
   , @CustomerSalesPtd   = customer.sales_ptd
   , @CustomerLastInv    = customer.last_inv
   , @CustomerOrderBal   = customer.order_bal
   , @CustomerPostedBal  = customer.posted_bal
   , @CustomerDiscYtd    = customer.disc_ytd
   FROM customer_mst customer WITH (UPDLOCK)
   WHERE customer.cust_num = @ArinvCustNum
   AND   customer.cust_seq = 0

   IF @CustomerRowPointer IS NULL
   BEGIN
      EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
                       , 'E=NoExistFor2'
                       , '@customer'
                       , '@arinv'
                       , '@arinv.cust_num'
                       , @ArinvCustNum
                       , '@arinv.inv_num'
                       , @ArinvInvNum

      RETURN @Severity
   END

   SET @CustaddrRowPointer = NULL

   SELECT
     @CustaddrRowPointer = custaddr.RowPointer
   , @CustaddrCorpCust   = custaddr.corp_cust
   , @CustaddrCountry    = custaddr.country
   , @CustaddrCurrCode   = custaddr.curr_code
   , @CustaddrCorpCred   = custaddr.corp_cred
   FROM custaddr_mst custaddr
   WHERE custaddr.cust_num = @ArinvCustNum
   AND   custaddr.cust_seq = 0

   IF @CustaddrRowPointer IS NULL
   BEGIN
      EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
                       , 'E=NoExistFor2'
                       , '@custaddr'
                       , '@arinv'
                       , '@arinv.cust_num'
                       , @ArinvCustNum
                       , '@arinv.inv_num'
                       , @ArinvInvNum

      RETURN @Severity
   END

   SET @CurrencyRowPointer = NULL

   SELECT
     @CurrencyRowPointer = currency.RowPointer
   , @CurrencyPlaces     = currency.places
   FROM currency_mst currency
   WHERE currency.curr_code = @CustaddrCurrCode

   IF @CurrencyRowPointer IS NULL
   BEGIN
      EXEC dbo.MsgAppSp @Infobar OUTPUT
      , 'E=NoExist1'
      , '@currency'
      , '@currency.curr_code'
      , @CustaddrCurrCode
      RETURN @Severity
   END

   IF LTrim(RTrim(@ArinvApplyToInvNum)) = '0'
   BEGIN
      SET @ShipCustaddrRowPointer = NULL

      SELECT
        @ShipCustaddrRowPointer = custaddr.RowPointer
      , @ShipCustaddrState      = custaddr.state
      FROM custaddr_mst custaddr
      WHERE custaddr.cust_num = @ArinvCustNum
      AND   custaddr.cust_seq = 0

      IF @ShipCustaddrRowPointer IS NULL
      BEGIN
         EXEC dbo.MsgAppSp @Infobar OUTPUT
         , 'E=NoExist2'
         , '@custaddr'
         , '@custaddr.cust_num'
         , @ArinvCustNum
         , '@custaddr.cust_seq'
         , 0
         RETURN @Severity
      END
   END
   ELSE
   BEGIN -- lookup the shipto
      SET @InvHdrRowPointer = NULL

      SELECT TOP 1
        @InvHdrRowPointer = inv_hdr.RowPointer
      , @InvHdrCoNum      = inv_hdr.co_num
      , @InvHdrCustNum    = inv_hdr.cust_num
      , @InvHdrCustSeq    = inv_hdr.cust_seq
      , @InvHdrInvSeq     = inv_hdr.inv_seq
      FROM inv_hdr_mst inv_hdr
      WHERE inv_hdr.inv_num = @ArinvInvNum
      AND   inv_hdr.co_num IS NOT NULL

      IF @InvHdrRowPointer IS NULL  -- This invoice not from an order
      BEGIN
         SET @ShipCustaddrRowPointer = NULL

         SELECT
           @ShipCustaddrRowPointer = custaddr.RowPointer
         , @ShipCustaddrState      = custaddr.state
         FROM custaddr_mst custaddr
         WHERE custaddr.cust_num = @ArinvCustNum
         AND   custaddr.cust_seq = 0

         IF @ShipCustaddrRowPointer IS NULL
         BEGIN
            EXEC dbo.MsgAppSp @Infobar OUTPUT
            , 'E=NoExist2'
            , '@custaddr'
            , '@custaddr.cust_num'
            , @ArinvCustNum
            , '@custaddr.cust_seq'
            , 0
            RETURN @Severity
         END
      END -- IF @InvHdrRowPointer IS NULL
      ELSE
      BEGIN
         SET @CoRowPointer = NULL
         IF (dbo.IsAddonAvailable('SyteLineFSP') = 1 OR dbo.IsAddonAvailable('SyteLineFSPM') = 1 
            OR dbo.IsAddonAvailable('SyteLineFSP_MS') = 1 OR dbo.IsAddonAvailable('SyteLineFSPM_MS') = 1)
         BEGIN
            DECLARE @Sysname Sysname
            SET @Sysname = 'dbo.EXTSSSFSInvPostingSp'

            EXEC @Severity = @Sysname
                       @ArinvInvNum
                     , @CoRowPointer OUTPUT
                     , @CoCustNum OUTPUT
                     , @CoCustSeq OUTPUT
                     , @Infobar OUTPUT
                     , @SSSFSInclSROInOnOrdBal OUTPUT
         END
      
         IF @CoRowPointer IS NULL
         BEGIN    
            SELECT
              @CoRowPointer = co.RowPointer
            , @CoCustNum    = co.cust_num
            , @CoCustSeq    = co.cust_seq
            FROM co_mst co WITH (READUNCOMMITTED)
            WHERE co.co_num = @InvHdrCoNum
         END 
        
         IF @CoRowPointer IS NOT NULL
         BEGIN
            SET @FindCustNum = @CoCustNum
            SET @FindCustSeq = @CoCustSeq
         END
         ELSE
         BEGIN
            SET @CohRowPointer = NULL

            SELECT
              @CohRowPointer = coh.RowPointer
            , @CohCustNum    = coh.cust_num
            , @CohCustSeq    = coh.cust_seq
            FROM coh_mst coh
            WHERE coh.co_num = @InvHdrCoNum
      
            IF @CohRowPointer IS NOT NULL
            BEGIN
               SET @FindCustNum = @CohCustNum
               SET @FindCustSeq = @CohCustSeq
            END
            ELSE
            BEGIN
               SET @FindCustNum = @InvHdrCustNum
               SET @FindCustSeq = @InvHdrCustSeq
            END
         END -- ELSE @CoRowPointer

         SET @ShipCustaddrRowPointer = NULL
         SET @ShipCustaddrState      = NULL

         SELECT
           @ShipCustaddrRowPointer = custaddr.RowPointer
         , @ShipCustaddrState      = custaddr.state
         FROM custaddr_mst custaddr
         WHERE custaddr.cust_num = @FindCustNum
         AND   custaddr.cust_seq = @FindCustSeq

         IF @ShipCustaddrRowPointer IS NULL
         BEGIN
            EXEC dbo.MsgAppSp @Infobar OUTPUT
            , 'E=NoExist2'
            , '@custaddr'
            , '@custaddr.cust_num'
            , @FindCustNum
            , '@custaddr.cust_seq'
            , @FindCustSeq
            RETURN @Severity
         END

      END -- ELSE @InvHdrRowPointer
   END -- Lookup the Shipto

   IF dbo.IsAddonAvailable('SyteLineTax') = 1
   BEGIN
      DECLARE
        @SessionId           RowPointerType
      , @ReleaseTmpTaxTables FlagNyType      
      
      SET @SessionId = dbo.SessionIDSp()
      EXEC @Severity = UseTmpTaxTablesSp @SessionId, @ReleaseTmpTaxTables OUTPUT, @Infobar OUTPUT
         
      IF @ArinvTaxCode1 IN ('EXTUSE','EXTRNL','EXTMFG')  AND @ArinvPostFromCO = 0
      BEGIN
         EXEC @Severity = dbo.TaxBaseSp
                          @PInvType       = 'AR'
                        , @PType          = 'I'
                        , @PTaxCode1      = @ArinvTaxCode1
                        , @PTaxCode2      = @ArinvTaxCode2
                        , @PAmount        = @ArinvAmount
                        , @PAmountToApply = 0
                        , @PUndiscAmount  = @ArinvAmount
                        , @PUWsPrice      = NULL
                        , @PTaxablePrice  = NULL
                        , @PQtyInvoiced   = NULL
                        , @PCurrCode      = @CustaddrCurrCode
                        , @PInvDate       = @ArinvInvDate
                        , @PExchRate      = @ArinvExchRate
                        --@CalledFrom     = NULL
                        --@tpsProcessId   = NULL
                        , @Infobar        = @Infobar OUTPUT
                        , @pRefType       = 'ARP'               
                        , @pHdrPtr        = @ArinvRowPointer    
                        , @pLineRefType   = NULL              
                        , @pLinePtr       = NULL               

         IF @Severity <> 0
            RETURN @Severity
         
         EXEC @Severity = dbo.TaxCalcSp
                          @PInvType      = 'AR'
                        , @PTaxCode1     = @ArinvTaxCode1
                        , @PTaxCode2     = @ArinvTaxCode2
                        , @PFreight      = @ArinvFreight
                        , @PFrtTaxCode1  = NULL
                        , @PFrtTaxCode2  = NULL
                        , @PMisc         = @ArinvMiscCharges
                        , @PMiscTaxCode1 = NULL
                        , @PMiscTaxCode2 = NULL
                        , @PInvDate      = @ArinvInvDate
                        , @PTermsCode    = @ArinvTermsCode
                        , @PUseExchRate  = @ArinvUseExchRate
                        , @PCurrCode     = @CustaddrCurrCode
                        , @PPlaces       = @CurrencyPlaces
                        , @PExchRate     = @ArinvExchRate
                        , @PSalesTax1    = @ArinvSalesTax  OUTPUT
                        , @PSalesTax2    = @ArinvSalesTax2 OUTPUT
                        , @Infobar       = @Infobar        OUTPUT
                        , @pRefType      = 'ARP'                
                        , @pHdrPtr       = @ArinvRowPointer     

         IF @Severity <> 0
            RETURN @Severity
         
      END
         
      IF @ReleaseTmpTaxTables = 1
         EXEC ReleaseTmpTaxTablesSp @SessionId

      IF @Severity <> 0
            RETURN @Severity

   END

   -- VALIDATE Invoice Number, Credit , Debit Memo Number
   SET @ArtranRowPointer = NULL
   SET @ArtranCustNum    = NULL

   SELECT TOP 1
   @ArtranRowPointer = artran.RowPointer
   , @ArtranInvNum     = artran.inv_num
   , @ArtranCustNum    = artran.cust_num
   , @ArtranActive     = artran.active
   , @ArtranInvSeq     = artran.inv_seq
   FROM artran_mst artran
   WHERE artran.inv_num = @ArinvInvNum
   IF @ArtranRowPointer IS NOT NULL OR (dbo.IsInteger(@ArinvInvNum) = 1 and convert(BIGINT, @ArinvInvNum) <= 0)
   BEGIN
      EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
                  , 'E=CmdFailed'
                  , '@%post'

      IF @ArinvType = 'I'
           EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
                  , 'E=Exist2'
                  , '@artran'
                  , '@artran.inv_num'
                  , @ArtranInvNum
                  , '@artran.cust_num'
                  , @ArtranCustNum
      ELSE IF @ArinvType = 'C'
           EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
                  , 'E=Exist2'
                  , '@artran'
                  , '@artran.credit_memo'
                  , @ArtranInvNum
                  , '@artran.cust_num'
                  , @ArtranCustNum
      ELSE IF @ArinvType = 'D'
           EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
                  , 'E=Exist2'
                  , '@artran'
                  , '@artran.debit_memo'
                  , @ArtranInvNum
                  , '@artran.cust_num'
                  , @ArtranCustNum

      RETURN @Severity
   END

   IF ( LTrim(RTrim(@ArinvApplyToInvNum)) <> '0' AND LTrim(RTrim(@ArinvApplyToInvNum)) <> '-1' ) and @ArinvType <> 'I'-- Non-open C/D
   BEGIN
      SET @ArtranRowPointer = NULL

      SELECT TOP 1
        @ArtranRowPointer = artran.RowPointer
      , @ArtranInvNum     = artran.inv_num
      , @ArtranCustNum    = artran.cust_num
      , @ArtranActive     = artran.active
      , @ArtranInvSeq     = artran.inv_seq
      FROM artran_mst artran
      WHERE artran.cust_num = @ArinvCustNum
      AND   artran.inv_num  = @ArinvApplyToInvNum

      SET @ARExistsFlag = dbo.DefinedValue('ARWarningFlag')

      IF @ArtranRowPointer IS NULL AND (@ARExistsFlag is NULL OR @ARExistsFlag=0)
      BEGIN
         EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
                          , 'E=NoExistFor2'
                          , '@artran'
                          , '@arinv'
                          , '@arinv.cust_num'
                          , @ArinvCustNum
                          , '@arinv.inv_num'
                          , @ArinvApplyToInvNum

         SET @Severity = 4
         RETURN @Severity
      END

      IF ISNULL(@ArtranActive,0) = 0
      BEGIN
         EXEC @Severity = dbo.ARActiveSp
                            @pInvNum = @ArtranInvNum
                          , @CustNum = @PCustNum
                          , @pActive = 1
                          , @pMsg    = 0 -- Never give an error
                          , @Site = @ParmsSite
                          , @BatchUpdate = 0 -- tell sub-procedure to perform update
                          , @infobar = @Infobar OUTPUT

         IF @Severity <> 0
            RETURN @Severity
      END

   END -- ELSE IF @ArinvApplyToInvNum <> 0

   SET @TSeq = 0

   -- INITIALIZING VARS FOR TABLE INSERT
   SELECT
     @ArtranDiscDate   = NULL
   , @ArtranIssueDate  = NULL
   , @ArtranDiscAmt    = (0)

   SET @ArtranCustNum        = @ArinvCustNum
   SET @ArtranInvNum         = @ArinvInvNum
   SET @ArtranInvSeq         = @TSeq
   SET @ArtranType           = @ArinvType
   SET @ArtranCoNum          = @ArinvCoNum
   SET @ArtranDoNum          = @ArinvDoNum
   SET @ArtranInvDate        = @ArinvInvDate
   SET @ArtranDueDate        = CASE WHEN @ArinvType = 'C'
                                  THEN @ArinvInvDate
                                  ELSE @ArinvDueDate
                               END
   SET @ArtranAcct           = @ArinvAcct
   SET @ArtranAcctUnit1      = @ArinvAcctUnit1
   SET @ArtranAcctUnit2      = @ArinvAcctUnit2
   SET @ArtranAcctUnit3      = @ArinvAcctUnit3
   SET @ArtranAcctUnit4      = @ArinvAcctUnit4
   SET @ArtranDescription    = @ArinvDescription
   SET @ArtranAmount         = @ArinvAmount
   SET @ArtranMiscCharges    = @ArinvMiscCharges
   SET @ArtranSalesTax       = @ArinvSalesTax
   SET @ArtranSalesTax2      = @ArinvSalesTax2
   SET @ArtranFreight        = @ArinvFreight
   SET @ArtranExchRate       = @ArinvExchRate
   SET @ArtranCorpCust       = @CustaddrCorpCust
   SET @ArtranPostFromCo     = @ArinvPostFromCo
   SET @ArtranFixedRate      = @ArinvFixedRate
   SET @ArtranPayType        = @ArinvPayType
   SET @ArtranRef            = @ArinvRef
   SET @ArtranNoteExistsFlag = @ArinvNoteExistsFlag
   SET @ArtranShipmentId     = @ArinvShipmentId
   SET @ArtranBuilderInvOrigSite = @ArinvBuilderInvOrigSite
   SET @ArtranBuilderInvNum  = @ArinvBuilderInvNum
   SET @ArtranPostSite       = @PostSite

   IF @ArinvType = 'I' OR @ArinvType = 'D'
   BEGIN
      SET @TermsRowPointer = NULL

      SELECT
        @TermsRowPointer = terms.RowPointer
      , @TermsDiscDays   = terms.disc_days
      , @TermsDiscPct    = terms.disc_pct
      , @ProxDiscDay     = terms.prox_disc_day 
      , @ProxDiscMonthToForward = terms.prox_disc_month_to_forward
      FROM terms_mst terms
      WHERE terms.terms_code = @ArinvTermsCode

      IF @TermsRowPointer IS NOT NULL AND (@TermsDiscDays != 0 or @ProxDiscDay != 0)
      BEGIN
        IF @TermsDiscDays != 0
        BEGIN
          SET @ArtranDiscDate = DATEADD( DAY, @TermsDiscDays, @ArinvInvDate )
        END
        ELSE 
        BEGIN
          SET @ArtranDiscDate = @ArinvInvDate
          IF @ProxDiscDay < DATEPART (DAY, @ArtranDiscDate)
            SET @ArtranDiscDate = dbo.StartOfNextMonth(@ArtranDiscDate)
          
           SET @ArtranDiscDate = DATEADD( DAY, (@ProxDiscDay - DATEPART (DAY, @ArtranDiscDate)), @ArtranDiscDate)
           SET @ArtranDiscDate = DATEADD(MONTH, @ProxDiscMonthToForward, @ArtranDiscDate)
        END
        
        SET @ArtranDiscAmt  = ROUND(@ArinvAmount * @TermsDiscPct / 100, @CurrencyPlaces)
      END
      ELSE 
        SET @ArtranDiscDate = @ArinvInvDate   
        
   END

   IF @ArinvPostFromCo = 1
      SET @ArtranIssueDate = @ArinvInvDate

   INSERT INTO artran_mst (
     site_ref
   , disc_date
   , cust_num
   , inv_num
   , inv_seq
   , type
   , co_num
   , do_num
   , inv_date
   , due_date
   , acct
   , acct_unit1
   , acct_unit2
   , acct_unit3
   , acct_unit4
   , description
   , amount
   , misc_charges
   , sales_tax
   , sales_tax_2
   , freight
   , exch_rate
   , corp_cust
   , post_from_co
   , fixed_rate
   , pay_type
   , ref
   , NoteExistsFlag
   , disc_amt
   , issue_date
   , approval_status
   , apply_to_inv_num
   , rma
   , shipment_id
   , builder_inv_orig_site
   , builder_inv_num
   , post_site
   )
   VALUES (
	 @ParmsSite
   , @ArtranDiscDate
   , @ArtranCustNum
   , @ArtranInvNum
   , @ArtranInvSeq
   , @ArtranType
   , @ArtranCoNum
   , @ArtranDoNum
   , @ArtranInvDate
   , @ArtranDueDate
   , @ArtranAcct
   , @ArtranAcctUnit1
   , @ArtranAcctUnit2
   , @ArtranAcctUnit3
   , @ArtranAcctUnit4
   , @ArtranDescription
   , @ArtranAmount
   , @ArtranMiscCharges
   , @ArtranSalesTax
   , @ArtranSalesTax2
   , @ArtranFreight
   , @ArtranExchRate
   , @ArtranCorpCust
   , @ArtranPostFromCo
   , @ArtranFixedRate
   , @ArtranPayType
   , @ArtranRef
   , @ArtranNoteExistsFlag
   , @ArtranDiscAmt
   , @ArtranIssueDate
   , @ArinvApprovalStatus
   , @ArinvApplyToInvNum
   , @ArinvRma
   , @ArtranShipmentId
   , @ArtranBuilderInvOrigSite
   , @ArtranBuilderInvNum
   , @ArtranPostSite 
   )

   SET @Severity = @@Error
   IF @Severity <> 0
      RETURN @Severity

   -- Copy the Notes to artran
   SET @ArtranRowPointer = NULL

   SELECT
      @ArtranRowPointer = artran.RowPointer
   FROM artran_mst artran
   WHERE artran.cust_num   = @ArtranCustNum
   AND   artran.inv_num    = @ArtranInvNum
   AND   artran.inv_seq    = @ArtranInvSeq
   AND   artran.check_seq  = 0

   IF @ArtranRowPointer IS NULL
   BEGIN
      EXEC dbo.MsgAppSp @Infobar OUTPUT
      , 'E=NoExist4'
      , '@artran'
      , '@artran.cust_num'
      , @ArtranCustNum
      , '@artran.inv_num'
      , @ArtranInvNum
      , '@artran.inv_seq'
      , @ArtranInvSeq
      , '@artran.check_seq'
      , 0
      RETURN @Severity
   END

   EXEC @Severity = dbo.CopyNotesSp
                      @FromObject     = 'arinv'
                    , @FromRowPointer = @ArinvRowPointer
                    , @ToObject       = 'artran'
                    , @ToRowPointer   = @ArtranRowPointer

   IF @Severity <> 0
      RETURN @Severity
   -- If Finance Charges then Set the value of these variable so that the inv_stax record can be created
   If (LTrim(RTrim(@ArinvApplyToInvNum))) = '-1'
   BEGIN
      SET @InvHdrInvSeq  = 0
      SET @InvHdrInvNum  = @ArtranInvNum
   END

   -- IF NOT POSTING FROM CO, NOR POSTING FINANCE CHARGE CR/DR,
   -- CREATE inv-hdr/inv-stax RECORDS
   IF (LTrim(RTrim(@ArinvApplyToInvNum)) = '0' or (LTrim(RTrim(@ArinvApplyToInvNum)) <> '-1' and LTrim(RTrim(@ArinvApplyToInvNum)) <> '-2')) AND ISNULL(@ArinvPostFromCo,0) = 0
   BEGIN
      SET @TSeq             = @ArtranInvSeq
      SET @InvHdrRowPointer = NULL

      SELECT
        @InvHdrRowPointer = inv_hdr.RowPointer
      , @InvHdrCoNum      = inv_hdr.co_num
      , @InvHdrCustNum    = inv_hdr.cust_num
      , @InvHdrCustSeq    = inv_hdr.cust_seq
      , @InvHdrInvSeq     = inv_hdr.inv_seq
      FROM inv_hdr_mst inv_hdr
      WHERE inv_hdr.inv_num = @ArtranInvNum
      AND   inv_hdr.inv_seq = @TSeq

      IF @InvHdrRowPointer IS NOT NULL
      BEGIN
         EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
                          , 'E=ExistForIsAndIs1'
                          , '@inv_hdr'
                          , '@inv_hdr.inv_num'
                          , @ArtranInvNum
                          , '@inv_hdr.inv_seq'
                          , @TSeq
                          , '@arinv'
                          , '@arinv.cust_num'
                          , @ArinvCustNum

         RETURN @Severity
      END -- IF @InvHdrRowPointer IS NOT NULL
      ELSE
      BEGIN
         SET @ProjInvHdrRowPointer = NULL

         SELECT
          @ProjInvHdrRowPointer = proj_inv_hdr.RowPointer
         FROM proj_inv_hdr
         WHERE proj_inv_hdr.inv_num = @ArtranInvNum

         SET @InvHdrInvNum      = @ArtranInvNum
         SET @InvHdrInvSeq      = @TSeq
         SET @InvHdrCustNum     = @ArtranCustNum
         SET @InvHdrCustSeq     = 0
         SET @InvHdrCoNum       = @ArtranCoNum
         SET @InvHdrInvDate     = @ArtranInvDate
         SET @InvHdrTaxDate     =
                         CASE WHEN @ArtranInvDate < @TaxparmsLastTaxReport1
                              AND @TaxparmsLastTaxReport1 IS NOT NULL
                                 THEN @TaxparmsLastTaxReport1
                                 ELSE @ArtranInvDate
                         END
         SET @InvHdrTermsCode    = @ArinvTermsCode
         SET @InvHdrUseExchRate  = @ArinvUseExchRate
         SET @InvHdrTaxCode1     = @ArinvTaxCode1
         SET @InvHdrTaxCode2     = @ArinvTaxCode2
         SET @InvHdrMiscCharges  = CASE WHEN @ArtranType = 'C'
                                      THEN @ArtranMiscCharges * -1
                                      ELSE @ArtranMiscCharges
                                   END
         SET @InvHdrFreight      = CASE WHEN @ArinvType = 'C'
                                      THEN @ArtranFreight * -1
                                      ELSE @ArtranFreight
                                   END
         SET @InvHdrPrice        = (@ArtranAmount      +
                                    @ArtranMiscCharges +
                                    @ArtranFreight     +
                                    @ArtranSalesTax    +
                                    @ArtranSalesTax2) *
                                   (CASE WHEN @ArtranType = 'C'
                                      THEN -1
                                      ELSE 1
                                    END)
         SET @InvHdrState        = @ShipCustaddrState
         SET @InvHdrBillType     = CASE WHEN @ProjInvHdrRowPointer IS NOT NULL
                                      THEN 'J'
                                      ELSE 'A'
                                   END
         SET @InvHdrExchRate     = @ArtranExchRate
         SET @InvHdrEcCode       = NULL

         INSERT INTO inv_hdr (
           inv_num
         , inv_seq
         , cust_num
         , cust_seq
         , co_num
         , inv_date
         , tax_date
         , terms_code
         , use_exch_rate
         , tax_code1
         , tax_code2
         , misc_charges
         , freight
         , price
         , state
         , bill_type
         , exch_rate
         , ec_code
         )
         VALUES (
           @InvHdrInvNum
         , @InvHdrInvSeq
         , @InvHdrCustNum
         , @InvHdrCustSeq
         , @InvHdrCoNum
         , @InvHdrInvDate
         , @InvHdrTaxDate
         , @InvHdrTermsCode
         , @InvHdrUseExchRate
         , @InvHdrTaxCode1
         , @InvHdrTaxCode2
         , @InvHdrMiscCharges
         , @InvHdrFreight
         , @InvHdrPrice
         , @InvHdrState
         , @InvHdrBillType
         , @InvHdrExchRate
         , @InvHdrEcCode
         )

          END -- IF @InvHdrRowPointer IS NULL

      SET @TInvStaxSeq = 0

      -- SET EC-CODE OF 'BILL-TO' CUSTOMER
      IF @ParmsEcReporting = 1
      BEGIN

         IF @ParmsCountry <> @CustaddrCountry
         BEGIN
            -- Export?
            SET @CountryRowPointer = NULL
            SET @CountryEcCode     = NULL

            SELECT
              @CountryRowPointer = country.RowPointer
            , @CountryEcCode     = country.ec_code
            FROM country_mst country
            WHERE country.country = @CustaddrCountry

            SET @XCountryRowPointer = NULL
            SET @XCountryEcCode     = NULL

            SELECT
              @XCountryRowPointer = country.RowPointer
            , @XCountryEcCode     = country.ec_code
            FROM country_mst country
            WHERE country.country = @ParmsCountry

            SET @InvHdrEcCode = CASE WHEN
                                   (@CountryRowPointer IS NOT NULL AND
                                    @XCountryRowPointer IS NULL)
                                OR (@CountryRowPointer IS NOT NULL  AND
                                    @XCountryRowPointer IS NOT NULL AND
                                    @CountryEcCode <> @XCountryEcCode)
                                       THEN @CountryEcCode
                                       ELSE NULL
                                END

            IF @CountryEcCode IS NOT NULL
            BEGIN
               UPDATE inv_hdr
                  SET ec_code = @InvHdrEcCode
               WHERE inv_hdr.inv_num = @InvHdrInvNum
               AND   inv_hdr.inv_seq = @InvHdrInvSeq

               SET @Severity = @@ERROR
               IF @Severity <> 0
                  RETURN @Severity
            END -- IF @CountryEcCode IS NOT NULL

         END -- IF @ParmsCountry <> @CustaddrCountry

      END -- IF @ParmsEcReporting = 1
   END -- IF @ArinvInvNum >= 0 AND @ArinvPostFromCo = 0

   -- Start Advance Payment
   SELECT @ProjNum = proj_inv_hdr.proj_num,
          @RowPointer = proj_inv_hdr.RowPointer
   FROM proj_inv_hdr
      JOIN proj ON proj_inv_hdr.proj_num = proj.proj_num
   WHERE proj_inv_hdr.inv_num = @ArtranInvNum
      AND proj.type = 'P'

   IF @RowPointer IS NOT NULL
   BEGIN
      set @IsOrderForProject = 1
      SET @adv_pmt_deducted_amt_total        = 0
      SET @adv_pmt_to_be_deducted_amt_total  = 0
      SET @adv_pmt_invoiced_amt_total        = 0

      SELECT 
         @adv_pmt_deducted_amt_total = @adv_pmt_deducted_amt_total + CASE WHEN (inv_ms.create_invoice_for_adv_pmt = 0 
                                                                            AND inv_ms.adv_pmt_deduction_amt > 0 ) 
                                                                          THEN inv_ms.adv_pmt_deduction_amt
                                                                          ELSE 0
                                                                      END 
       , @adv_pmt_to_be_deducted_amt_total = @adv_pmt_to_be_deducted_amt_total - CASE WHEN (inv_ms.create_invoice_for_adv_pmt = 0 
                                                                                        AND inv_ms.adv_pmt_deduction_amt > 0 ) 
                                                                                      THEN inv_ms.adv_pmt_deduction_amt
                                                                                      ELSE 0
                                                                                  END 
       , @adv_pmt_invoiced_amt_total = @adv_pmt_invoiced_amt_total + CASE WHEN (inv_ms.create_invoice_for_adv_pmt <> 0) 
                                                                          THEN inv_ms.act_inv_amt + inv_ms.act_freight + inv_ms.act_misc_charges
                                                                          ELSE 0
                                                                      END 
      FROM proj_inv_item
      INNER JOIN inv_ms ON inv_ms.inv_ms_num = proj_inv_item.inv_ms_num 
                       AND inv_ms.proj_num   = proj_inv_item.proj_num
      WHERE proj_inv_item.proj_num = @ProjNum
        AND proj_inv_item.inv_num  = @ArtranInvNum

      UPDATE proj
      SET adv_pmt_deducted_amt       = adv_pmt_deducted_amt       + @adv_pmt_deducted_amt_total
        , adv_pmt_to_be_deducted_amt = adv_pmt_to_be_deducted_amt + @adv_pmt_to_be_deducted_amt_total
        , adv_pmt_invoiced_amt       = adv_pmt_invoiced_amt       + @adv_pmt_invoiced_amt_total
      WHERE proj.proj_num = @ProjNum
        AND proj.type = 'P'

   END
   -- End Advance Payment

   -- Begin ExtFin changes
   IF @ExtFinUseExtFin = 1 AND @ExtFinUseExternalAR = 1
   BEGIN
   SET @Infobar = NULL

       IF @PostExtFin = 0
       BEGIN
         EXEC @Severity = dbo.GetARBatchCounterSp
                                                @ExtFinOperationCounter output
                                                 ,@Infobar OUTPUT
       END

         IF @Severity <> 0
          RETURN @Severity
   INSERT INTO export_arinv(
                            export_arinv.ar_batch_id,
                            --export_arinv.batch_seq,
                            export_arinv.cust_num,
                            export_arinv.inv_num,
                            export_arinv.inv_seq,
                            export_arinv.type,
                            export_arinv.co_num,
                            export_arinv.inv_date,
                            export_arinv.due_date,
                            export_arinv.acct,
                            export_arinv.amount,
                            export_arinv.misc_charges,
                            export_arinv.sales_tax,
                            export_arinv.freight,
                            export_arinv.ref,
                            export_arinv.terms_code,
                            export_arinv.description,
                            export_arinv.post_from_co,
                            export_arinv.exch_rate,
                            export_arinv.sales_tax_2,
                            export_arinv.use_exch_rate,
                            export_arinv.tax_code1,
                            export_arinv.tax_code2,
                            export_arinv.acct_unit1,
                            export_arinv.acct_unit2,
                            export_arinv.acct_unit3,
                            export_arinv.acct_unit4,
                            export_arinv.fixed_rate,
                            export_arinv.rma,
                            export_arinv.pay_type,
                            export_arinv.draft_print_flag,
                            export_arinv.do_num,
                            export_arinv.NoteExistsFlag,
                            export_arinv.approval_status,
                            export_arinv.apply_to_inv_num,
                            export_arinv.returned_check,
                            export_arinv.shipment_id
                          )
                   VALUES (
                            @ExtFinOperationCounter
                            ,@ArinvCustNum
                            ,@ArinvInvNum
                            ,@TSeq
                            ,@ArinvType
                            ,@ArinvCoNum
                            ,@ArinvInvDate
                            ,@ArinvDuedate
                            ,@ArinvAcct
                            ,@ArinvAmount
                            ,@ArinvMiscCharges
                            ,@ArinvSalesTax
                            ,@ArinvFreight
                            ,@ArinvRef
                            ,@ArinvTermsCode
                            ,@ArinvDescription
                            ,@ArinvPostFromCo
                            ,@ArinvExchRate
                            ,@ArinvSalesTax2
                            ,@ArinvUseExchRate
                            ,@ArinvTaxCode1
                            ,@ArinvTaxCode2
                            ,@ArinvAcctUnit1
                            ,@ArinvAcctUnit2
                            ,@ArinvAcctUnit3
                            ,@ArinvAcctUnit4
                            ,@ArinvFixedRate
                            ,@ArinvRma
                            ,@ArinvPayType
                            ,@ArinvDraftPrintFlag
                            ,@ArinvDoNum
                            ,@ArinvNoteExistsFlag
                            ,@ArinvApprovalStatus
                            ,@ArinvApplyToInvNum
                            ,@ArinvReturnedCheck
                            ,@ArinvShipmentId
                           )
   End
   -- End ExtFin changes

   --Multiple due date check starting

   SELECT @UseMultipleDueDates = terms.use_multi_due_dates
        , @MultiTermsRowPointer = terms.RowPointer
   FROM terms_mst terms
   WHERE terms.terms_code = @ArinvTermsCode

   IF @UseMultipleDueDates = 1 AND @ArinvType <> 'C'
   BEGIN
      SELECT @TotDueDateAmounts = SUM(ar_terms_due.amount)
      FROM ar_terms_due_mst ar_terms_due
      WHERE ar_terms_due.cust_num = @ArinvCustNum
         AND ar_terms_due.inv_num = @ArinvInvNum
         AND ar_terms_due.inv_seq = @ArinvInvSeq

      SET @TotArinvAmount = @ArinvAmount + @ArinvMiscCharges + @ArinvFreight + @ArinvSalesTax + @ArinvSalesTax2
      IF @TotDueDateAmounts <> @TotArinvAmount
      BEGIN
         EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
                          , 'E=InvAmtNotMatching'
                          , @ArinvInvNum
         RETURN @Severity
      END
      ELSE
      BEGIN
         IF @ExtFinUseExtFin = 1 AND @ExtFinUseExternalAR = 1
         BEGIN
            SELECT @ExportBatchID = export_arinv.ar_batch_id
                 , @ExportBatchSeq = export_arinv.batch_seq
            FROM export_arinv
            WHERE export_arinv.cust_num = @ArinvCustNum
               AND export_arinv.inv_num = @ArinvInvNum
               AND export_arinv.inv_seq = @ArinvInvSeq

            INSERT INTO export_ar_terms_due (
               export_ar_terms_due.ar_batch_id
             , export_ar_terms_due.batch_seq
             , export_ar_terms_due.cust_num
             , export_ar_terms_due.inv_num
             , export_ar_terms_due.inv_seq
             , export_ar_terms_due.seq
             , export_ar_terms_due.due_date
             , export_ar_terms_due.terms_percent
             , export_ar_terms_due.amount
            )
            SELECT @ExportBatchID
             , @ExportBatchSeq
             , ar_terms_due.cust_num
             , ar_terms_due.inv_num
             , ar_terms_due.inv_seq
             , ar_terms_due.seq
             , ar_terms_due.due_date
             , ar_terms_due.terms_percent
             , ar_terms_due.amount
            FROM ar_terms_due
            WHERE ar_terms_due.cust_num = @ArinvCustNum
               AND ar_terms_due.inv_num = @ArinvInvNum
               AND ar_terms_due.inv_seq = @ArinvInvSeq
         END
      END
   END
   --Multiple due date check ending

   set @ControlSite = @ParmsSite

   -- Credits
   SET @TotCr = 0

   DECLARE ArinvdCrs CURSOR LOCAL STATIC FOR
   SELECT
     arinvd.RowPointer
   , arinvd.ref_num
   , arinvd.ref_line_suf
   , arinvd.ref_release
   , arinvd.dist_seq
   , arinvd.amount
   , arinvd.acct
   , arinvd.acct_unit1
   , arinvd.acct_unit2
   , arinvd.acct_unit3
   , arinvd.acct_unit4
   , arinvd.tax_system
   , arinvd.tax_code
   , arinvd.tax_basis
   , arinvd.tax_code_e
   , arinvd.inv_seq      -- Extfin
   , arinvd.ref_type     -- Extfin
   , arinvd.NoteExistsFlag -- Extfin
   FROM arinvd_mst arinvd
   WHERE arinvd.cust_num = @ArinvCustNum
   AND   arinvd.inv_num  = @ArinvInvNum
   AND   arinvd.inv_seq  = @ArinvInvSeq

   OPEN ArinvdCrs
   WHILE @Severity = 0
   BEGIN
      FETCH ArinvdCrs INTO
        @ArinvdRowPointer
      , @ArinvdRefNum
      , @ArinvdRefLineSuf
      , @ArinvdRefRelease
      , @ArinvdDistSeq
      , @ArinvdAmount
      , @ArinvdAcct
      , @ArinvdAcctUnit1
      , @ArinvdAcctUnit2
      , @ArinvdAcctUnit3
      , @ArinvdAcctUnit4
      , @ArinvdTaxSystem
      , @ArinvdTaxCode
      , @ArinvdTaxBasis
      , @ArinvdTaxCodeE
      , @ArinvdInvSeq     -- Extfin
      , @ArinvdRefType    -- Extfin
      , @ArinvdNoteExistsFlag --Extfin
      IF @@FETCH_STATUS = -1
         BREAK
      
      select @ArinvdAcct, @ArinvdAmount  
      IF ISNULL(@ArinvdAmount,0) <> 0
      BEGIN
         SET @ChartRowPointer = NULL

         SELECT
           @ChartRowPointer = chart.RowPointer
         FROM chart_mst chart
         WHERE chart.acct = @ArinvdAcct

         IF @ChartRowPointer IS NULL
         BEGIN
            EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
                             , 'E=NoExistFor4'
                             , '@chart'
                             , '@arinvd'
                             , '@arinvd.cust_num'
                             , @ArinvCustNum
                             , '@arinvd.inv_num'
                             , @ArinvInvNum
                             , '@arinvd.dist_seq'
                             , @ArinvdDistSeq
                             , '@arinvd.acct'
                             , @ArinvdAcct

            RETURN @Severity
         END
         
         EXEC @Severity = dbo.ChkAcctSp
                            @acct    = @ArinvdAcct
                          , @date    = @ArinvInvDate
                          , @Infobar = @Infobar OUTPUT

         IF @Severity <> 0
            RETURN @Severity
		 
		 
         SET @ArinvdAmount = Round(@ArinvdAmount,@CurrencyPlaces) 
         SET @TotCr = @TotCr + @ArinvdAmount

         EXEC @Severity = dbo.CurrcnvtSp
                           @CurrCode     = @CustaddrCurrCode
                         , @FromDomestic = 0  -- To Domestic
                         , @UseBuyRate   = 0  -- Selling Rate
                         , @RoundResult  = 1  -- Use Rounding Factor
                         , @Date         = NULL
                         , @Infobar      = @Infobar              OUTPUT
                         , @Amount1      = @ArinvdAmount
                         , @Result1      = @DomesticArinvdAmount OUTPUT
                         , @TRate        = @ArinvExchRate        OUTPUT
                         , @Site = @ParmsSite

   -- save the discount amount for returned check
		 
         IF @ArinvReturnedCheck = 1
         AND @ArparmsDiscAcct = @ArinvdAcct
         Begin
            SET @DomesticDisc = @DomesticArinvdAmount
         End

         IF @Severity <> 0
            RETURN @Severity

         SET @AmountToPost = CASE WHEN @ArinvType = 'C'
                                THEN @DomesticArinvdAmount
                                ELSE @DomesticArinvdAmount * -1
                             END

         SET @ForAmtToPost = CASE WHEN @ArinvType = 'C'
                                THEN @ArinvdAmount
                                ELSE @ArinvdAmount * -1
                             END

         /*
         EXEC @Severity = dbo.ChkUnitSp
                            @acct    = @ArinvdAcct
                          , @p_unit1 = @ArinvdAcctUnit1
                          , @p_unit2 = @ArinvdAcctUnit2
                          , @p_unit3 = @ArinvdAcctUnit3
                          , @p_unit4 = @ArinvdAcctUnit4
                          , @Infobar = @Infobar OUTPUT

         IF @Severity <> 0
            RETURN @Severity
		 */
		 
		 
         IF @IsControlNumberCreated = 0 AND @AmountToPost <> 0
         BEGIN
            /*
            EXEC @Severity = dbo.NextControlNumberSp
            @JournalId = 'AR Dist'
            , @TransDate = @ArinvInvDate
            , @ControlPrefix = @ControlPrefix output
            , @ControlSite = @ControlSite output
            , @ControlYear = @ControlYear output
            , @ControlPeriod = @ControlPeriod output
            , @ControlNumber = @ControlNumber output
            , @Infobar = @Infobar OUTPUT
            IF @Severity  <> 0
               RETURN @Severity
            ELSE
               SET @IsControlNumberCreated = 1
            */   
			SET @ControlSite = @Site
			
			EXEC dbo.NextControlNumberSp
			  @JournalId = 'AR Dist'
			, @TransDate = @ArinvInvDate
			, @ControlPrefix = @ControlPrefix output
			, @ControlSite = @ControlSite output
			, @ControlYear = @ControlYear output
			, @ControlPeriod = @ControlPeriod output
			, @ControlNumber = @ControlNumber output
			, @Infobar = @Infobar OUTPUT

			SET @SubKey = @ControlPrefix + '-'
			   + @ControlSite + '-'
			   + convert(nvarchar, @ControlYear) + '-'
			   + convert(nvarchar, @ControlPeriod)
			   
			SELECT
				@ControlNumber = KeyID + 1
			FROM NextKeys
			WHERE
				TableColumnName = 'journal.control_number' and
				SubKey			= @SubKey
				
			IF @ControlNumber IS NULL SET @ControlNumber = 1

		 END
         -- Note output value for @Endtrans not used. Always recalculated
         -- in posting
         
         EXEC @Severity = dbo.ZPV_JourpostSp
                            @id                = 'AR Dist'
                          , @trans_date        = @ArinvInvDate
                          , @acct              = @ArinvdAcct
                          , @acct_unit1        = @ArinvdAcctUnit1
                          , @acct_unit2        = @ArinvdAcctUnit2
                          , @acct_unit3        = @ArinvdAcctUnit3
                          , @acct_unit4        = @ArinvdAcctUnit4
                          , @amount            = @AmountToPost
                          , @ref               = @ArinvRef
                          , @vend_num          = @ArinvCustNum
                          , @voucher           = @ArinvInvNum
                          , @ref_type          = @ArinvType
                          , @ref_num           = @ArinvdRefNum
                          , @ref_line_suf      = @ArinvdRefLineSuf
                          , @ref_release       = @ArinvdRefRelease
                          , @vouch_seq         = @TSeq
                          , @curr_code         = @CustAddrCurrCode
                          , @for_amount        = @ForAmtToPost
                          , @exch_rate         = @ArinvExchRate
                           , @ControlPrefix = @ControlPrefix
                           , @ControlSite = @ControlSite
                           , @ControlYear = @ControlYear
                           , @ControlPeriod = @ControlPeriod
                           , @ControlNumber = @ControlNumber
                           , @last_seq      = @LastSeq  OUTPUT
                          , @Infobar           = @Infobar      OUTPUT

         IF @Severity  <> 0
            RETURN @Severity
		 
   IF @ArinvdNoteExistsFlag > 0
      BEGIN -- copy notes
         SET @JournalRowPointer = NULL
         SELECT
           @JournalRowPointer = journal.RowPointer
         FROM journal_mst journal
         WHERE journal.id = @TId and
               journal.seq = @LastSeq

         if @JournalRowPointer IS NOT NULL
         BEGIN
            EXEC @Severity = dbo.CopyNotesSp
             'arinvd'
            , @ArinvdRowPointer
            , 'journal'
            , @JournalRowPointer

            if @Severity <> 0
               RETURN @Severity
         END
      END -- copy notes

         SET @AmountPosted = @AmountPosted + @AmountToPost

      END -- IF @ArinvdAmount <> 0

      IF ISNULL(@ArinvPostFromCo,0) = 0 AND
         ISNULL(@ArinvdTaxSystem,0) <> 0
      BEGIN
         SET @TaxcodeRowPointer = NULL

         SELECT
           @TaxcodeRowPointer = taxcode.RowPointer
         , @TaxcodeTaxRate    = taxcode.tax_rate
         , @TaxcodeTaxJur     = taxcode.tax_jur
         FROM taxcode_mst taxcode
         WHERE taxcode.tax_system    = @ArinvdTaxSystem
         AND   taxcode.tax_code_type = 'R'
         AND   taxcode.tax_code      = @ArinvdTaxCode

         IF @TaxcodeRowPointer IS NULL
         BEGIN
            EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
                             , 'E=NoExistFor4'
                             , '@taxcode'
                             , '@arinvd'
                             , '@arinvd.cust_num'
                             , @ArinvCustNum
                             , '@arinvd.inv_num'
                             , @ArinvInvNum
                             , '@arinvd.dist_seq'
                             , @ArinvdDistSeq
                             , '@arinvd.tax_code'
                             , @ArinvdTaxCode

            RETURN @Severity
         END

         SET @TInvStaxSeq   = @TInvStaxSeq + 1

         SET @InvStaxInvNum        = @InvHdrInvNum
         SET @InvStaxInvSeq        = @InvHdrInvSeq
         SET @InvStaxSeq           = @TInvStaxSeq
         SET @InvStaxInvDate       =
               CASE WHEN (@TaxparmsLastTaxReport1 IS NOT NULL AND
                          @InvHdrInvDate < @TaxparmsLastTaxReport1)
                  THEN @TaxparmsLastTaxReport1
                  ELSE @InvHdrInvDate
               END
         SET @InvStaxTaxCode       = @ArinvdTaxCode
         SET @InvStaxStaxAcct      = @ArinvdAcct
         SET @InvStaxStaxAcctUnit1 = @ArinvdAcctUnit1
         SET @InvStaxStaxAcctUnit2 = @ArinvdAcctUnit2
         SET @InvStaxStaxAcctUnit3 = @ArinvdAcctUnit3
         SET @InvStaxStaxAcctUnit4 = @ArinvdAcctUnit4
         SET @InvStaxSalesTax      = CASE WHEN @ArinvType = 'C'
                                        THEN @ArinvdAmount * -1
                                        ELSE @ArinvdAmount
                                     END
         SET @InvStaxCustNum       = @InvHdrCustNum
         SET @InvStaxCustSeq       = @InvHdrCustSeq
         SET @InvStaxTaxBasis      = CASE WHEN @ArinvType = 'C'
                                        THEN @ArinvdTaxBasis * -1
                                        ELSE @ArinvdTaxBasis
                                     END
         SET @InvStaxTaxSystem     = @ArinvdTaxSystem
         SET @InvStaxTaxRate       = @TaxcodeTaxRate
         SET @InvStaxTaxJur        = @TaxcodeTaxJur
         SET @InvStaxTaxCodeE      = @ArinvdTaxCodeE

         INSERT INTO inv_stax (
           inv_stax.inv_num
         , inv_stax.inv_seq
         , inv_stax.seq
         , inv_stax.inv_date
         , inv_stax.tax_code
         , inv_stax.stax_acct
         , inv_stax.stax_acct_unit1
         , inv_stax.stax_acct_unit2
         , inv_stax.stax_acct_unit3
         , inv_stax.stax_acct_unit4
         , inv_stax.sales_tax
         , inv_stax.cust_num
         , inv_stax.cust_seq
         , inv_stax.tax_basis
         , inv_stax.tax_system
         , inv_stax.tax_rate
         , inv_stax.tax_jur
         , inv_stax.tax_code_e
         )
         VALUES (
           @InvStaxInvNum
         , @InvStaxInvSeq
         , @InvStaxSeq
         , @InvStaxInvDate
         , @InvStaxTaxCode
         , @InvStaxStaxAcct
         , @InvStaxStaxAcctUnit1
         , @InvStaxStaxAcctUnit2
         , @InvStaxStaxAcctUnit3
         , @InvStaxStaxAcctUnit4
         , @InvStaxSalesTax
         , @InvStaxCustNum
         , @InvStaxCustSeq
         , @InvStaxTaxBasis
         , @InvStaxTaxSystem
         , @InvStaxTaxRate
         , @InvStaxTaxJur
         , @InvStaxTaxCodeE
         )

         SET @Severity = @@Error
         IF @Severity <> 0
            RETURN @Severity

      END -- IF @ArinvPostFromCo = 0 AND @ArinvdTaxSystem <> 0

      -- Begin ExtFin changes
      IF @ExtFinUseExtFin = 1 AND @ExtFinUseExternalAR = 1
      BEGIN
      INSERT INTO export_arinvd (
                  export_arinvd.ar_batch_id,
                  --export_arinvd.batch_seq,
                  export_arinvd.cust_num,
                  export_arinvd.inv_num,
                  export_arinvd.inv_seq,
                  export_arinvd.dist_seq,
                  export_arinvd.acct,
                  export_arinvd.amount,
                  export_arinvd.tax_code,
                  export_arinvd.tax_basis,
                  export_arinvd.tax_system,
                  export_arinvd.tax_code_e,
                  export_arinvd.ref_type,
                  export_arinvd.ref_num,
                  export_arinvd.ref_line_suf,
                  export_arinvd.ref_release,
                  export_arinvd.acct_unit1,
                  export_arinvd.acct_unit2,
                  export_arinvd.acct_unit3,
                  export_arinvd.acct_unit4
                  --export_arinvd.NoteExistsFlag
               )
              VALUES (
                  @ExtFinOperationCounter

                  ,@ArinvCustNum
                  ,@ArinvInvNum
                  ,@TSeq
                  ,@ArinvdDistSeq
                  ,@ArinvdAcct
                  ,@ArinvdAmount
                  ,@ArinvdTaxCode
                  ,@ArinvdTaxBasis
                  ,@ArinvdTaxSystem
                  ,@ArinvdTaxCodeE
                  ,@ArinvdRefType
                  ,@ArinvdRefNum
                  ,@ArinvdRefLineSuf
                  ,@ArinvdRefRelease
                  ,@ArinvdAcctUnit1
                  ,@ArinvdAcctUnit2
                  ,@ArinvdAcctUnit3
                  ,@ArinvdAcctUnit4
                )
      END
      -- End ExtFin changes
      DELETE
      FROM arinvd_mst
      WHERE cust_num = @ArinvCustNum
      AND   inv_num  = @ArinvInvNum
      AND   inv_seq  = @ArinvInvSeq
      AND   dist_seq = @ArinvdDistSeq

      SET @Severity = @@ERROR
      IF @Severity <> 0
         RETURN @Severity
   END
   CLOSE      ArinvdCrs
   DEALLOCATE ArinvdCrs

   -- Begin ExtFin changes
   IF @ExtFinUseExtFin = 1 AND @ExtFinUseExternalAR = 1
      BEGIN
       SET @PostExtFin = 1
     END
   -- End ExtFin changes

   EXEC @Severity = dbo.CurrcnvtSp
                     @CurrCode     = @CustaddrCurrCode
                   , @FromDomestic = 0  -- To Domestic
                   , @UseBuyRate   = 0  -- Selling Rate
                   , @RoundResult  = 1  -- Use Rounding Factor
                   , @Date         = NULL
                   , @Infobar      = @Infobar        OUTPUT
                   , @Amount1      = @ArinvAmount
                   , @Result1      = @DomesticAmount OUTPUT
                   , @TRate        = @ArinvExchRate  OUTPUT
                   , @Site = @ParmsSite

   IF @Severity <> 0
      RETURN @Severity

   SET @ForeignInvTotal = ROUND(@ArinvAmount,@CurrencyPlaces) + 
                          ROUND(@ArinvMiscCharges,@CurrencyPlaces)+ 
                          ROUND(@ArinvSalesTax,@CurrencyPlaces)+ 
                          ROUND(@ArinvSalesTax2,@CurrencyPlaces)+ 
                          ROUND(@ArinvFreight,@CurrencyPlaces) 

   IF @TotCr <> @ForeignInvTotal
   BEGIN
      EXEC @Severity = dbo.MsgAppSp @Infobar OUTPUT
                       , 'E=IsCompare<>2'
                       , '@arinvd.amount'
                       , @ForeignInvTotal
                       , '@arinv'
                       , '@arinv.cust_num'
                       , @ArinvCustNum
                       , '@arinv.inv_num'
                       , @ArinvInvNum

      RETURN @Severity
   END

   EXEC @Severity = dbo.CurrcnvtSp
                     @CurrCode     = @CustaddrCurrCode
                   , @FromDomestic = 0  -- To Domestic
                   , @UseBuyRate   = 0  -- Selling Rate
                   , @RoundResult  = 1  -- Use Rounding Factor
                   , @Date         = NULL
                   , @Infobar      = @Infobar          OUTPUT
                   , @Amount1      = @ForeignInvTotal
                   , @Result1      = @DomesticInvTotal OUTPUT
                   , @TRate        = @ArinvExchRate    OUTPUT
                   , @Site = @ParmsSite

   IF @Severity <> 0
      RETURN @Severity

   -- A/R Debit
   SET @AmountToPost = CASE WHEN @ArinvType = 'C'
                          THEN @DomesticInvTotal * -1
                          ELSE @DomesticInvTotal
                       END
   SET @ForAmtToPost = CASE WHEN @ArinvType = 'C'
                          THEN @ForeignInvTotal * -1
                          ELSE @ForeignInvTotal
                       END

   /*
   EXEC @Severity = dbo.ChkUnitSp
                      @acct    = @ArinvAcct
                    , @p_unit1 = @ArinvAcctUnit1
                    , @p_unit2 = @ArinvAcctUnit2
                    , @p_unit3 = @ArinvAcctUnit3
                    , @p_unit4 = @ArinvAcctUnit4
                    , @Infobar = @Infobar OUTPUT

   IF @Severity <> 0
      RETURN @Severity
	*/
   IF @IsControlNumberCreated = 0 AND @AmountToPost <> 0
   BEGIN
   /*
      EXEC @Severity = dbo.NextControlNumberSp
      @JournalId = 'AR Dist'
      , @TransDate = @ArinvInvDate
      , @ControlPrefix = @ControlPrefix output
      , @ControlSite = @ControlSite output
      , @ControlYear = @ControlYear output
      , @ControlPeriod = @ControlPeriod output
      , @ControlNumber = @ControlNumber output
      , @Infobar = @Infobar OUTPUT
      IF @Severity  <> 0
         RETURN @Severity
      ELSE
         SET @IsControlNumberCreated = 1*/
		SET @ControlSite = @Site
		
		EXEC dbo.NextControlNumberSp
		  @JournalId = 'AR Dist'
		, @TransDate = @ArinvInvDate
		, @ControlPrefix = @ControlPrefix output
		, @ControlSite = @ControlSite output
		, @ControlYear = @ControlYear output
		, @ControlPeriod = @ControlPeriod output
		, @ControlNumber = @ControlNumber output
		, @Infobar = @Infobar OUTPUT

		SET @SubKey = @ControlPrefix + '-'
		   + @ControlSite + '-'
		   + convert(nvarchar, @ControlYear) + '-'
		   + convert(nvarchar, @ControlPeriod)
		   
		SELECT
			@ControlNumber = KeyID + 1
		FROM NextKeys
		WHERE
			TableColumnName = 'journal.control_number' and
			SubKey			= @SubKey
			
		IF @ControlNumber IS NULL SET @ControlNumber = 1         
   END
 	
   -- Note output value for @Endtrans not used. Always recalculated in posting
   
   EXEC @Severity = dbo.ZPV_JourpostSp
                      @id                = 'AR Dist'
                    , @trans_date        = @ArinvInvDate
                    , @acct              = @ArinvAcct
                    , @acct_unit1        = @ArinvAcctUnit1
                    , @acct_unit2        = @ArinvAcctUnit2
                    , @acct_unit3        = @ArinvAcctUnit3
                    , @acct_unit4        = @ArinvAcctUnit4
                    , @amount            = @AmountToPost
                    , @ref               = @ArinvRef
                    , @vend_num          = @ArinvCustNum
                    , @voucher           = @ArinvInvNum
                    , @ref_type          = @ArinvType
                    , @vouch_seq         = @TSeq
                    , @curr_code         = @CustAddrCurrCode
                    , @for_amount        = @ForAmtToPost
                    , @exch_rate         = @ArinvExchRate
                     , @ControlPrefix = @ControlPrefix
                     , @ControlSite = @ControlSite
                     , @ControlYear = @ControlYear
                     , @ControlPeriod = @ControlPeriod
                     , @ControlNumber = @ControlNumber
                     , @last_seq      = @LastSeq  OUTPUT
                    , @Infobar           = @Infobar      OUTPUT

   IF @Severity  <> 0
      RETURN @Severity
	
   IF @ArtranNoteExistsFlag > 0
      BEGIN -- copy notes
         SET @JournalRowPointer = NULL
         SELECT
           @JournalRowPointer = journal.RowPointer
         FROM journal_mst journal
         WHERE journal.id = @TId and
               journal.seq = @LastSeq

         if @JournalRowPointer IS NOT NULL
         BEGIN
            EXEC @Severity = dbo.CopyNotesSp
             'artran'
            , @ArtranRowPointer
            , 'journal'
            , @JournalRowPointer

            if @Severity <> 0
               RETURN @Severity
         END
      END -- copy notes
   SET @AmountPosted = @AmountPosted + @AmountToPost

   -- Evaluate to create adjustment entries if progressive bills have been created if
   -- 1. this invoice is posted from CO and
   -- 2. customer currency is not the same as domestic currency
   IF @ArinvPostFromCo = 1 AND
      @CustAddrCurrCode <> @CurrparmsCurrCode
   BEGIN
      EXEC @Severity = dbo.ProgBillAdjustmentSp
                       @InvNum           = @ArinvInvNum
                     , @InvSeq           = @ArinvInvSeq
                     , @InvDate          = @ArinvInvDate
                     , @CustNum          = @ArinvCustNum
                     , @CustaddrCurrCode = @CustaddrCurrCode
                     , @ArinvType        = @ArinvType
                     , @ArinvExchRate    = @ArinvExchRate
                     , @TId              = @TId
                     , @ControlPrefix    = @ControlPrefix
                     , @ControlSite      = @ControlSite
                     , @ControlYear      = @ControlYear
                     , @ControlPeriod    = @ControlPeriod
                     , @ControlNumber    = @ControlNumber
                     , @AmountPosted     = @AmountPosted OUTPUT
                     , @Infobar          = @Infobar OUTPUT
                     , @IsControlNumberCreated = @IsControlNumberCreated
                     , @ArinvInvDate     = @ArinvInvDate

      IF @Severity <> 0
         RETURN @Severity
   END -- IF @ArinvPostFromCo = 1

   -- POST CURRENCY GAIN/LOSS DUE TO ROUNDOFF
   IF @AmountPosted <> 0.0
   BEGIN
      SET @GainLossAmount = @AmountPosted * -1

      IF @IsControlNumberCreated = 0 AND @GainLossAmount <> 0
      BEGIN
         EXEC @Severity = dbo.NextControlNumberSp
         @JournalId = @TId
         , @TransDate = @ArinvInvDate
         , @ControlPrefix = @ControlPrefix output
         , @ControlSite = @ControlSite output
         , @ControlYear = @ControlYear output
         , @ControlPeriod = @ControlPeriod output
         , @ControlNumber = @ControlNumber output
         , @Infobar = @Infobar OUTPUT
         IF @Severity  <> 0
            RETURN @Severity
         ELSE
            SET @IsControlNumberCreated = 1
      END
      -- Note output value for @Endtrans not used. Always recalculated in posting
      EXEC @Severity = dbo.GLGainLossSp
                         @PAmount            = @GainLossAmount
                       , @PCurrCode          = @CustAddrCurrCode
                       , @PRef               = @ArinvRef
                       , @PId                = @TId
                       , @PTransDate         = @ArinvInvDate
                       , @PVendNum           = @ArinvCustNum
                       , @PVoucher           = @ArinvInvNum
                        , @ControlPrefix = @ControlPrefix
                        , @ControlSite = @ControlSite
                        , @ControlYear = @ControlYear
                        , @ControlPeriod = @ControlPeriod
                        , @ControlNumber = @ControlNumber
                       , @Infobar            = @Infobar      OUTPUT

      IF @Severity  <> 0
         RETURN @Severity
   END

   IF @ArinvType = 'C'
   BEGIN
      SET @CustomerOrderBal = CASE WHEN @ArinvPostFromCo = 1 and @IsOrderForProject = 0
                                    AND @SSSFSInclSROInOnOrdBal = 1   -- SSS added
                                 THEN @CustomerOrderBal + @ForeignInvTotal
                                 ELSE @CustomerOrderBal
                              END

      SET @CustomerPostedBal = @CustomerPostedBal - @ForeignInvTotal
      SET @CustomerSalesYtd  = @CustomerSalesYtd  - @DomesticAmount
      SET @CustomerSalesPtd  = @CustomerSalesPtd  - @DomesticAmount

      IF ISNULL(@CustaddrCorpCred,0) = 1
      BEGIN
         SET @Adjust = CASE WHEN ISNULL(@ArinvPostFromCo,0) = 1 and @IsOrderForProject = 0
                            THEN @ForeignInvTotal
                            ELSE 0.0
                       END

         EXEC @Severity = dbo.UpdCorpObalSp
                            @CorpCustNum = @CustaddrCorpCust
                          , @Adjust      = @Adjust
                          , @Operator    = 'ADD'
                          , @Message     = @Infobar OUTPUT

         IF @Infobar IS NOT NULL
            SET @Severity = 16

         IF @Severity <> 0
            RETURN @Severity

         EXEC @Severity = dbo.UpdPbalSp
                            @CorpCustNum = @CustaddrCorpCust
                          , @Adjust      = @ForeignInvTotal
                          , @Operator    = 'SUBTRACT'
                          , @Message     = @Infobar OUTPUT

         IF @Infobar IS NOT NULL
            SET @Severity = 16

         IF @Severity <> 0
            RETURN @Severity
      END
   END -- IF @ArinvType = 'C'
   ELSE
   BEGIN -- DR/INV
      SET @CustomerOrderBal  = CASE WHEN @ArinvPostFromCo = 1 and @IsOrderForProject = 0
                                     AND @SSSFSInclSROInOnOrdBal = 1   -- SSS added
                                  THEN @CustomerOrderBal - @ForeignInvTotal
                                  ELSE @CustomerOrderBal
                               END

      SET @CustomerPostedBal = @CustomerPostedBal + @ForeignInvTotal
      SET @CustomerSalesYtd  = @CustomerSalesYtd  + @DomesticAmount
      SET @CustomerSalesPtd  = @CustomerSalesPtd  + @DomesticAmount

      IF ISNULL(@CustaddrCorpCred,0) = 1
      BEGIN
         SET @Adjust = CASE WHEN ISNULL(@ArinvPostFromCo,0) = 1 and @IsOrderForProject = 0
                          THEN @ForeignInvTotal
                          ELSE 0.0
                       END

         EXEC @Severity = dbo.UpdCorpObalSp
                            @CorpCustNum = @CustaddrCorpCust
                          , @Adjust      = @Adjust
                          , @Operator    = 'SUBTRACT'
                          , @Message     = @Infobar OUTPUT

         IF @Infobar IS NOT NULL
            SET @Severity = 16

         IF @Severity <> 0
            RETURN @Severity

         EXEC @Severity = dbo.UpdPbalSp
                            @CorpCustNum = @CustaddrCorpCust
                          , @Adjust      = @ForeignInvTotal
                          , @Operator    = 'ADD'
                          , @Message     = @Infobar OUTPUT

         IF @Infobar IS NOT NULL
            SET @Severity = 16

         IF @Severity <> 0
            RETURN @Severity
      END
   END -- ELSE DR/INV
   
   IF @CustomerLastInv < @ArinvInvDate OR @CustomerLastInv IS NULL
      SET @CustomerLastInv = @ArinvInvDate

   -- Update Customer
   If @ArinvReturnedCheck <> 1
   Begin
     UPDATE customer_mst
     SET sales_ytd  = @CustomerSalesYtd
       , sales_ptd  = @CustomerSalesPtd
       , last_inv   = @CustomerLastInv
       , order_bal  = @CustomerOrderBal
       , posted_bal = @CustomerPostedBal
     WHERE cust_num = @ArinvCustNum
     AND   cust_seq = 0
   End
   Else
   Begin
     SET @CustomerDiscYtd = @CustomerDiscYtd - @DomesticDisc
     UPDATE customer_mst
     SET order_bal  = @CustomerOrderBal
       , posted_bal = @CustomerPostedBal
       , disc_ytd   = @CustomerDiscYtd
     WHERE cust_num = @ArinvCustNum
     AND   cust_seq = 0
   End  
     
   SET @Severity = @@ERROR
   IF @Severity <> 0
      RETURN @Severity

   -- Delete Arinv
   DELETE arinv_mst
   WHERE cust_num = @PCustNum
   AND   inv_num  = @PInvNum
   AND   inv_seq  = @PInvSeq

   SET @Severity = @@ERROR
   IF @Severity <> 0
      RETURN @Severity

   --Build a Bod
   DECLARE @ActionExpression NVARCHAR(60)
   SET @ActionExpression = 'Replace' --Unable to deturmin if Add or Replace

   IF @ArinvType IN('C','D','I')
      EXEC @Severity  = dbo.RemoteMethodForReplicationTargetsSp
           @IdoName      = 'SP!'
         , @MethodName   = 'TriggerInvoiceSyncSp'
         , @Infobar      = @Infobar OUTPUT
         , @Parm1Value   = @PInvNum
         , @Parm2Value   = @PInvSeq
         , @Parm3Value   = @ActionExpression

   IF @Severity <> 0
      RETURN @Severity

   IF dbo.IsAddonAvailable('SyteLineCCI') = 1
   BEGIN
      IF OBJECT_ID('dbo.EXTSSSCCIInvPostingSp') IS NOT NULL
      BEGIN
         DECLARE @EXTSSSCCI_SpName sysname
         SET @EXTSSSCCI_SpName = 'dbo.EXTSSSCCIInvPostingSp'

         EXEC @Severity = @EXTSSSCCI_SpName
                          @PInvNum
                        , @Infobar OUTPUT
         IF @Severity <> 0
            RETURN @Severity
      END
   END

   IF EXISTS (SELECT 1 FROM tt_arpost
              WHERE tt_arpost.SessionID = @PSessionID
              AND   tt_arpost.cust_num  = @PCustNum
              AND   tt_arpost.inv_num   = @PInvNum
              AND   tt_arpost.inv_seq   = @PInvSeq
              AND   tt_arpost.printed   = 0)
      -- Mark the record as posted, Let print delete
      UPDATE tt_arpost
         SET tt_arpost.posted = 1
      WHERE tt_arpost.SessionID = @PSessionID
      AND   tt_arpost.cust_num  = @PCustNum
      AND   tt_arpost.inv_num   = @PInvNum
      AND   tt_arpost.inv_seq   = @PInvSeq
   ELSE -- record printed, delete
      DELETE tt_arpost
      WHERE tt_arpost.SessionID = @PSessionID
      AND   tt_arpost.cust_num  = @PCustNum
      AND   tt_arpost.inv_num   = @PInvNum
      AND   tt_arpost.inv_seq   = @PInvSeq

   SET @Severity = @@Error

   IF @Severity <> 0
      RETURN @Severity
END
ELSE
BEGIN
   EXEC @Severity   = RemoteMethodCallSp
           @Site       = @ToSite
         , @IdoName    = NULL
         , @MethodName = 'InvPostingSp'
         , @Infobar    = @Infobar OUTPUT
         , @Parm1Value = @PSessionID
         , @Parm2Value = @PCustNum
         , @Parm3Value = @PInvNum
         , @Parm4Value = @PInvSeq
         , @Parm5Value = @PJHeaderRowPointer
         , @Parm6Value = @PostExtFin
         , @Parm7Value = @ExtFinOperationCounter
         , @Parm8Value = @Infobar
         , @Parm9Value = @ToSite
         , @Parm10Value = @PostSite

   IF EXISTS (SELECT 1 FROM tt_arpost
              WHERE tt_arpost.SessionID = @PSessionID
              AND   tt_arpost.cust_num  = @PCustNum
              AND   tt_arpost.inv_num   = @PInvNum
              AND   tt_arpost.inv_seq   = @PInvSeq
              AND   tt_arpost.printed   = 0)
      -- Mark the record as posted, Let print delete
      UPDATE tt_arpost
         SET tt_arpost.posted = 1
      WHERE tt_arpost.SessionID = @PSessionID
      AND   tt_arpost.cust_num  = @PCustNum
      AND   tt_arpost.inv_num   = @PInvNum
      AND   tt_arpost.inv_seq   = @PInvSeq
   ELSE -- record printed, delete
      DELETE tt_arpost
      WHERE tt_arpost.SessionID = @PSessionID
      AND   tt_arpost.cust_num  = @PCustNum
      AND   tt_arpost.inv_num   = @PInvNum
      AND   tt_arpost.inv_seq   = @PInvSeq

   IF @Severity <> 0
      RETURN @Severity
END

RETURN @Severity




GO

