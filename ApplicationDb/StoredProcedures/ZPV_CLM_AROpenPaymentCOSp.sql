/****** Object:  StoredProcedure [dbo].[ZPV_CLM_AROpenPaymentCOSp]    Script Date: 10/29/2014 12:25:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ZPV_CLM_AROpenPaymentCOSp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ZPV_CLM_AROpenPaymentCOSp]
GO

/****** Object:  StoredProcedure [dbo].[ZPV_CLM_AROpenPaymentSp]    Script Date: 10/29/2014 12:25:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[ZPV_CLM_AROpenPaymentCOSp](
	@pCustNum		CustNumType = null
,	@pCoNum			CoNumType = null)
 
AS
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

   -- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_ZPV_CLM_AROpenPaymentCOSp') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_ZPV_CLM_AROpenPaymentCOSp'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      EXEC @EXTGEN_SpName
			@pCustNum
			
      -- ETP routine must take over all desired functionality of this standard routine:
      RETURN 0
   END
   -- End of Generic External Touch Point code.

DECLARE 
	@Site SiteType,
	@Infobar InfobarType
	
SELECT @Site = site FROM site
EXEC [dbo].[SetSiteSp] @Site, @Infobar OUTPUT

declare @ttArOpen table(
	ArSelect		ListYesNoType
,	ArZlaArTypeId	ZlaArTypeIdType
,	ArZlaInvNum		ZlaInvNumType
,	ArCoNum			CoNumType
,	ArOpen			AmountType
,	ArBankCode		BankCodeType
,	ArCheckNum		ARCheckNumType
,	ArCoPayRowPointer	RowPointerType
,	ArPayType		POSMPayTypeType
,	ArOpenApply		AmountType)

insert into @ttArOpen(
	ArSelect		
,	ArZlaArTypeId		
,	ArZlaInvNum		
,	ArCoNum			
,	ArOpen
,	ArBankCode
,	ArCheckNum
,	ArCoPayRowPointer
,	ArPayType
,	ArOpenApply)
select
	0 as 'Select'
,	cop.ar_pay_id
,	null
,	cop.co_num
,	ar.amount
,	cop.bank_code
,	ISNULL(cop.check_num, ar.inv_seq)
,	cop.RowPointer
,	cop.pay_type
,	0
from zpv_co_payments cop 
inner join artran ar 
	on	ar.co_num = cop.co_num 
	and ar.bank_code = cop.bank_code 
	and ar.inv_num = '0' 
	and ar.zla_ar_pay_id = cop.ar_pay_id
	and ar.inv_date = cop.pay_date
	and ar.amount > 0
where	cop.co_num = @pCoNum
	and cop.posted = 1

select
	ArSelect		
,	ArZlaArTypeId		
,	ArZlaInvNum		
,	ArCoNum			
,	ArOpen
,	ArBankCode
,	ArCheckNum
,	ArCoPayRowPointer
,	ArPayType
,	ArOpenApply
from @ttArOpen
where ArOpen > 0	

GO

