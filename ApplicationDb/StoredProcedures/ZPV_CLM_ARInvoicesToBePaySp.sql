/****** Object:  StoredProcedure [dbo].[ZPV_CLM_ARInvoicesToBePaySp]    Script Date: 10/29/2014 12:25:16 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ZPV_CLM_ARInvoicesToBePaySp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ZPV_CLM_ARInvoicesToBePaySp]
GO

/****** Object:  StoredProcedure [dbo].[ZPV_CLM_ARInvoicesToBePaySp]    Script Date: 10/29/2014 12:25:16 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[ZPV_CLM_ARInvoicesToBePaySp](
	@pCustNum		CustNumType = null
,	@FilterString   LongListType = NULL)
 
AS
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

   -- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_ZPV_CLM_ARInvoicesToBePaySp') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_ZPV_CLM_ARInvoicesToBePaySp'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      EXEC @EXTGEN_SpName
			@pCustNum
		,	@FilterString
			
      -- ETP routine must take over all desired functionality of this standard routine:
      RETURN 0
   END
   -- End of Generic External Touch Point code.

DECLARE 
	@Site SiteType,
	@Infobar InfobarType

DECLARE
  @SQL LongListType

SELECT @Site = site FROM site
EXEC [dbo].[SetSiteSp] @Site, @Infobar OUTPUT

declare @ttArSumm table(
	ArSelect		ListYesNoType
,	ArInvNum		InvNumType
,	ArZlaInvNum		ZlaInvNumType
,	ArInvDate		DateType
,	ArDueDate		DateType
,	ArCoNum			CoNumType
,	ArFactura		AmountType
,	ArPagos			AmountType
,	ArDebito		AmountType
,	ArCredito		AmountType
,	ArSaldo			AmountType
,	ArPagado		AmountType
,	ArOpen			AmountType)

declare
	@ArSelect		ListYesNoType
,	@ArInvNum		InvNumType
,	@ArZlaInvNum	ZlaInvNumType
,	@ArInvDate		DateType
,	@ArDueDate		DateType
,	@ArCoNum		CoNumType
,	@ArFactura		AmountType
,	@ArPagos		AmountType
,	@ArDebito		AmountType
,	@ArCredito		AmountType
,	@ArSaldo		AmountType
,	@ArPagado		AmountType
,	@ArOpen			AmountType

insert into @ttArSumm(
	ArSelect		
,	ArInvNum		
,	ArZlaInvNum		
,	ArInvDate		
,	ArDueDate		
,	ArCoNum			
,	ArFactura		
,	ArPagos			
,	ArDebito		
,	ArCredito		
,	ArSaldo
,	ArPagado
,	ArOpen)
select
	0 as 'Select'
,	ar.inv_num
,	ar.zla_inv_num
,	ar.inv_date
,	ar.due_date
,	ar.co_num
,	isnull((select sum(arsumm.Amt) 
		from ARSumSimplifiedAmtView arsumm 
		where	arsumm.cust_num = ar.cust_num 
			and arsumm.apply_to_inv_num = ar.inv_num
			and arsumm.type = 'I'),0) 'Factura'
,	isnull((select sum(arsumm.Amt) 
		from ARSumSimplifiedAmtView arsumm 
		where	arsumm.cust_num = ar.cust_num 
			and arsumm.apply_to_inv_num = ar.inv_num
			and arsumm.type = 'P'),0) 'Pagos'
,	isnull((select sum(arsumm.Amt) 
		from ARSumSimplifiedAmtView arsumm 
		where	arsumm.cust_num = ar.cust_num 
			and arsumm.apply_to_inv_num = ar.inv_num
			and arsumm.type = 'D'),0) 'Debito'
,	isnull((select sum(arsumm.Amt) 
		from ARSumSimplifiedAmtView arsumm 
		where	arsumm.cust_num = ar.cust_num 
			and arsumm.apply_to_inv_num = ar.inv_num
			and arsumm.type = 'C'),0) 'Credito'
,	isnull((select sum(arsumm.Amt) 
		from ARSumSimplifiedAmtView arsumm 
		where	arsumm.cust_num = ar.cust_num 
			and arsumm.apply_to_inv_num = ar.inv_num
			and arsumm.type = 'I'),0) -
	isnull((select sum(arsumm.Amt) 
		from ARSumSimplifiedAmtView arsumm 
		where	arsumm.cust_num = ar.cust_num 
			and arsumm.apply_to_inv_num = ar.inv_num
			and arsumm.type = 'P'),0) +
	isnull((select sum(arsumm.Amt) 
		from ARSumSimplifiedAmtView arsumm 
		where	arsumm.cust_num = ar.cust_num 
			and arsumm.apply_to_inv_num = ar.inv_num
			and arsumm.type = 'D'),0) -
	isnull((select sum(arsumm.Amt) 
		from ARSumSimplifiedAmtView arsumm 
		where	arsumm.cust_num = ar.cust_num 
			and arsumm.apply_to_inv_num = ar.inv_num
			and arsumm.type = 'C'),0) 'Saldo'
, 0 'Pagado'
, isnull((select sum(art.amount) 
		from artran art 
		where	art.cust_num = ar.cust_num 
			and art.inv_num = '0'
			and art.type = 'P' 
			and art.co_num = ar.co_num),0) 'Open'
from artran ar 
where	ar.cust_num = @pCustNum
	and ar.type = 'I'


SELECT
    @ArSelect		as ArTBPSelect
,	@ArInvNum		as ArTBPInvNum
,	@ArZlaInvNum	as ArTBPZlaInvNum
,	@ArInvDate		as ArTBPInvDate
,	@ArDueDate		as ArTBPDueDate
,	@ArCoNum		as ArTBPCoNum
,	@ArFactura		as ArTBPFactura
,	@ArPagos		as ArTBPPagos
,	@ArDebito		as ArTBPDebito
,	@ArCredito		as ArTBPCredito
,	@ArSaldo		as ArTBPSaldo
,	@ArPagado		as ArTBPPagado
,	@ArOpen			as ArTBPOpen
INTO #tempOutput
WHERE 1=2

INSERT INTO #tempOutput(
    ArTBPSelect		
,	ArTBPInvNum		
,	ArTBPZlaInvNum		
,	ArTBPInvDate		
,	ArTBPDueDate		
,	ArTBPCoNum			
,	ArTBPFactura		
,	ArTBPPagos			
,	ArTBPDebito		
,	ArTBPCredito		
,	ArTBPSaldo
,	ArTBPPagado
,	ArTBPOpen)
select
	ArSelect		
,	ArInvNum		
,	ArZlaInvNum		
,	ArInvDate		
,	ArDueDate		
,	ArCoNum			
,	ArFactura		
,	ArPagos			
,	ArDebito		
,	ArCredito	
,	ArSaldo	
,	ArPagado
,	ArOpen
from @ttArSumm
where ArSaldo > 0 

If @FilterString is null
begin
	select
		ArTBPSelect		
	,	ArTBPInvNum		
	,	ArTBPZlaInvNum		
	,	ArTBPInvDate		
	,	ArTBPDueDate		
	,	ArTBPCoNum			
	,	ArTBPFactura		
	,	ArTBPPagos			
	,	ArTBPDebito		
	,	ArTBPCredito	
	,	ArTBPSaldo	
	,	ArTBPPagado
	,	ArTBPOpen
	from #tempOutput
end
else
begin
	set @SQL = 'select
		ArTBPSelect		
	,	ArTBPInvNum		
	,	ArTBPZlaInvNum		
	,	ArTBPInvDate		
	,	ArTBPDueDate		
	,	ArTBPCoNum			
	,	ArTBPFactura		
	,	ArTBPPagos			
	,	ArTBPDebito		
	,	ArTBPCredito	
	,	ArTBPSaldo	
	,	ArTBPPagado
	,	ArTBPOpen
	from #tempOutput
	where ' + @FilterString

	EXEC sp_executesql @SQL
end

GO

