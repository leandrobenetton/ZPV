/****** Object:  StoredProcedure [dbo].[ZPV_POSARPaymentCreditMemoSp]    Script Date: 10/29/2014 12:28:38 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ZPV_POSARPaymentCreditMemoSp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ZPV_POSARPaymentCreditMemoSp]
GO

/****** Object:  StoredProcedure [dbo].[ZPV_POSARPaymentCreditMemoSp]    Script Date: 10/29/2014 12:28:38 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/* $Header: /ApplicationDB/Stored Procedures/ZPV_POSARPaymentGenerateSp.sp 3     3/04/10 10:13a Dahn $ */
/*
***************************************************************
*                                                             *
*                           NOTICE                            *
*                                                             *
*   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
*   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS AFFILIATES   *
*   OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED WITHOUT PRIOR  *
*   WRITTEN PERMISSION. LICENSED CUSTOMERS MAY COPY AND       *
*   ADAPT THIS SOFTWARE FOR THEIR OWN USE IN ACCORDANCE WITH  *
*   THE TERMS OF THEIR SOFTWARE LICENSE AGREEMENT.            *
*   ALL OTHER RIGHTS RESERVED.                                *
*                                                             *
*   (c) COPYRIGHT 2010 INFOR.  ALL RIGHTS RESERVED.           *
*   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
*   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
*   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL RIGHTS        *
*   RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE         *
*   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
*                                                             *
*************************************************************** 
*/
/* $Archive: /ApplicationDB/Stored Procedures/ZPV_POSARPaymentGenerateSp.sp $
 *
 * SL9.00.10 1 ljb Benetton Fri May 16 13:00:00 2014

 * $NoKeywords: $
 */
CREATE PROCEDURE [dbo].[ZPV_POSARPaymentCreditMemoSp] (
	@CoNum			CoNumType		= null,
	@InvNum			InvNumType		= null,
	@ArTypeId		ZlaArTypeIdType	= null,
	@DocId			ZlaDocumentIdType = null,
	@Disc			decimal(6,4)	= null,
	@TInvNum		InvNumType       OUTPUT,
	@ArinvRowPointer RowPointerType	 OUTPUT,
	@Infobar         InfobarType     OUTPUT
) AS

   -- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_ZPV_POSARPaymentCreditMemoSp') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_ZPV_POSARPaymentCreditMemoSp'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      DECLARE @EXTGEN_Severity int
      EXEC @EXTGEN_Severity = @EXTGEN_SpName
         @CoNum,
         @InvNum,
		 @ArTypeId,
		 @DocId,
		 @Disc,
		 @TInvNum			OUTPUT,
		 @ArinvRowPointer	OUTPUT,
         @Infobar			OUTPUT
 
      -- ETP routine can RETURN 1 to signal that the remainder of this standard routine should now proceed:
      IF @EXTGEN_Severity <> 1
         RETURN @EXTGEN_Severity
   END
   -- End of Generic External Touch Point code.

DECLARE @Site SiteType
SELECT @Site = site FROM site
EXEC [dbo].[SetSiteSp] @Site, @Infobar OUTPUT

DECLARE
	 @Severity      INT
DECLARE
	@CoCustNum		CustNumType,
	@InvDate		DateType,
	@TLastTran		InvNumType,
	@ZlaInvNum		InvNumType,	 
	@ZlaAuthCode	varchar(30),
	@ZlaAuthEndDate DateType,
	@InvSeq			InvSeqType,
	@TaxCode1		TaxCodeType,
	@TaxCode2		TaxCodeType

SET @InvDate = GETDATE()

select @CoCustNum = co.cust_num from co where co.co_num = @CoNum

BEGIN
	EXEC @Severity = dbo.ZLA_NextInvNumSp
		   @Custnum      = @CoCustNum
		 , @InvDate      = @InvDate
		 , @Type         = 'C'
		 , @InvNum       = @TLastTran OUTPUT
		 , @Action       = 'NextNum'
		 , @Infobar      = @Infobar OUTPUT
		 , @ZlaArTypeId	 = @ArTypeId
		 , @ZlaInvNum    = @ZlaInvNum OUTPUT
		 , @ZlaAuthCode	 = @ZlaAuthCode OUTPUT 
		 , @ZlaAuthEndDate = @ZlaAuthEndDate OUTPUT
		 , @ZlaDocId	   = @DocId
		 
    IF @Severity <> 0
    RETURN
    
    IF @TInvNum IS NULL
      SET @TInvNum = '0'
	
	IF dbo.prefixonly(@TLastTran)<> dbo.prefixonly(@TInvNum)
					SET @TInvNum = @TLastTran
					
    SET @TInvNum = dbo.MaxInvNum(@TLastTran, @TInvNum)

	EXEC @Severity = dbo.ZLA_NextInvNumSp
		@Custnum      = @CoCustNum
	 , @InvDate      = @InvDate
	 , @Type         = 'C'
	 , @InvNum       = @TInvNum OUTPUT
	 , @Action       = 'AddedNum'
	 , @Infobar      =		@Infobar OUTPUT
	 , @ZlaArTypeId	 =		@ArTypeId
	 , @ZlaInvNum    =		@ZlaInvNum OUTPUT
	 , @ZlaAuthCode	 = 		@ZlaAuthCode OUTPUT 
	 , @ZlaAuthEndDate =	@ZlaAuthEndDate OUTPUT
	 , @ZlaDocId	   = @DocId

	select top(1) @InvSeq = artran.inv_seq + 1
	from artran	
	where
		artran.inv_num = @InvNum
	order by artran.inv_seq desc
	
	select 
		@TaxCode1 = cus.tax_code1,
		@TaxCode2 = cus.tax_code2
	from artran ar
	inner join customer cus	on cus.cust_num = ar.cust_num and cus.cust_seq = 0
	where
		ar.inv_num = @InvNum and ar.inv_seq = 0
	
	set @ArinvRowPointer = NEWID()
	insert into arinv(
		cust_num,
		inv_num,
		inv_seq,
		type,
		co_num,
		inv_date,
		due_date,
		acct,
		amount,
		misc_charges,
		sales_tax,
		freight,
		ref,
		terms_code,
		description,
		post_from_co,
		exch_rate,
		sales_tax_2,
		tax_code1,
		tax_code2,
		acct_unit1,
		acct_unit2,
		acct_unit3,
		acct_unit4,
		fixed_rate,
		rma,
		pay_type,
		apply_to_inv_num,
		zla_for_amount,
		zla_for_misc_charges,
		zla_for_freight,
		zla_for_exch_rate,
		zla_for_curr_code,
		zla_for_sales_tax,
		zla_for_sales_tax_2,
		zla_for_fixed_rate,
		zla_auth_end_date,
		zla_ar_type_id,
		zla_inv_num,
		zla_auth_code,
		RowPointer)
	select
		ar.cust_num,
		@TInvNum, --inv_num
		0, --inv_seq
		'C',
		ar.co_num,
		ar.inv_date,
		ar.due_date,
		ar.acct,
		round(ar.amount * (@Disc/100),2),
		0, --misc_charges
		0, --round(ar.sales_tax * (@Disc/100),2),
		0, --freight
		'ARC ' + @TInvNum, --ref
		null,
		ar.description,
		0, --ar.post_from_co
		ar.exch_rate,
		0, --round(ar.sales_tax_2 * (@Disc/100),2),
		@TaxCode1,
		@TaxCode2,
		ar.acct_unit1,
		ar.acct_unit2,
		ar.acct_unit3,
		ar.acct_unit4,
		ar.fixed_rate,
		ar.rma,
		ar.pay_type,
		ar.apply_to_inv_num,
		round(ar.zla_for_amount * (@Disc/100),2),
		0, --zla_for_misc_charges
		0, --zla_for_freight
		ar.zla_for_exch_rate,
		ar.zla_for_curr_code,
		0, --round(ar.zla_for_sales_tax * (@Disc/100),2),
		0, --round(ar.zla_for_sales_tax_2 * (@Disc/100),2),
		ar.zla_for_fixed_rate,
		ar.zla_auth_end_date,
		@ArTypeId,
		@TInvNum,
		ar.zla_auth_code,
		@ArinvRowPointer
	from artran ar
	where
		ar.inv_num = @InvNum and
		ar.inv_seq = 0

	EXEC	@Severity = [dbo].[ZLA_ArinvgSp]
		@PArinv = @ArinvRowPointer,
		@Infobar = @Infobar OUTPUT
	
END

RETURN @Severity




GO

