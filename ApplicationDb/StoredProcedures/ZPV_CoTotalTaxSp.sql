/****** Object:  StoredProcedure [dbo].[ZPV_CoTotalTaxSp]    Script Date: 10/29/2014 12:26:35 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ZPV_CoTotalTaxSp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ZPV_CoTotalTaxSp]
GO

/****** Object:  StoredProcedure [dbo].[ZPV_CoTotalTaxSp]    Script Date: 10/29/2014 12:26:35 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




/* $Header: /ApplicationDB/Stored Procedures/GetVendorParmSp.sp 7     3/04/10 1:23p Dahn $ */
/*
***************************************************************
*                                                             *
*                           NOTICE                            *
*                                                             *
*   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
*   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS AFFILIATES   *
*   OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED WITHOUT PRIOR  *
*   WRITTEN PERMISSION. LICENSED CUSTOMERS MAY COPY AND       *
*   ADAPT THIS SOFTWARE FOR THEIR OWN USE IN ACCORDANCE WITH  *
*   THE TERMS OF THEIR SOFTWARE LICENSE AGREEMENT.            *
*   ALL OTHER RIGHTS RESERVED.                                *
*                                                             *
*   (c) COPYRIGHT 2010 INFOR.  ALL RIGHTS RESERVED.           *
*   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
*   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
*   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL RIGHTS        *
*   RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE         *
*   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
*                                                             *
*************************************************************** 
*/
/* $Archive: /ApplicationDB/Stored Procedures/ZAR_GetVendorInfoSp.sp $
 *
 * SL9.00 7 ljb LBenetton Thu Apr 17 13:00:00 2014
 * Initial Program
 *
 */
CREATE PROCEDURE [dbo].[ZPV_CoTotalTaxSp]  (
  @Type				varchar(1), 
  @CustNum			CustNumType,
  @CustSeq			CustSeqType,
  @CoNum			CoNumType,
  @TaxCode1			TaxCodeType,
  @TaxCode2			TaxCodeType,
  @TaxRate			TaxRateType	output
) AS

   -- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_ZPV_CoTotalTaxSp') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_ZPV_CoTotalTaxSp'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      EXEC @EXTGEN_SpName
		@Type,
        @CustNum,
        @CustSeq,
        @CoNum,
        @TaxCode1,
        @TaxCode2,
		@TaxRate	output
		
      -- ETP routine must take over all desired functionality of this standard routine:
      RETURN 0
   END
   -- End of Generic External Touch Point code.
 
DECLARE
  @Severity INT

SET  @Severity = 0

declare
	@CoTaxCode1		TaxCodeType,
	@CoTaxCode2		TaxCodeType,
	@TaxRate1		TaxRateType,
	@TaxRate2		TaxRateType
			
if @Type = 'C' or @Type is null
begin
	select 
		@CoTaxCode1		= cus.tax_code1,
		@CoTaxCode2		= cus.tax_code2
	from customer_mst cus 
	where 
		cus.cust_num = @CustNum and
		cus.cust_seq = @CustSeq	 

	if @CoTaxCode1 is not null
	begin
		select 
			@TaxRate1	= tax.tax_rate
		from taxcode_mst tax
		where
			tax.tax_code	= @CoTaxCode1
	end
	else
	begin
		set @TaxRate1 = 0
	end

	if @CoTaxCode2 is not null
	begin
		select 
			@TaxRate2	= tax.tax_rate
		from taxcode_mst tax
		where
			tax.tax_code	= @CoTaxCode2
	end
	else
	begin
		set @TaxRate2 = 0
	end
end

if @Type = 'O'
begin
	if @TaxCode1 is not null
	begin
		select 
			@TaxRate1	= tax.tax_rate
		from taxcode_mst tax
		where
			tax.tax_code	= @TaxCode1
	end
	else
	begin
		set @TaxRate1 = 0
	end

	if @TaxCode2 is not null
	begin
		select 
			@TaxRate2	= tax.tax_rate
		from taxcode_mst tax
		where
			tax.tax_code	= @TaxCode2
	end
	else
	begin
		set @TaxRate1 = 0
	end
end

set @TaxRate	= isnull(@TaxRate1,0) + isnull(@TaxRate2,0)

RETURN @Severity



GO

