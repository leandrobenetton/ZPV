/****** Object:  StoredProcedure [dbo].[ZPV_SetNextInvNumSp]    Script Date: 10/29/2014 12:28:47 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ZPV_SetNextInvNumSp]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ZPV_SetNextInvNumSp]
GO

/****** Object:  StoredProcedure [dbo].[ZPV_SetNextInvNumSp]    Script Date: 10/29/2014 12:28:47 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


/* $Header: /ApplicationDB/Stored Procedures/ZLA_SetNextInvNumSp.sp 22    3/04/10 4:39p Dahn $ */
/*
***************************************************************
*                                                             *
*                           NOTICE                            *
*                                                             *
*   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *
*   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS AFFILIATES   *
*   OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED WITHOUT PRIOR  *
*   WRITTEN PERMISSION. LICENSED CUSTOMERS MAY COPY AND       *
*   ADAPT THIS SOFTWARE FOR THEIR OWN USE IN ACCORDANCE WITH  *
*   THE TERMS OF THEIR SOFTWARE LICENSE AGREEMENT.            *
*   ALL OTHER RIGHTS RESERVED.                                *
*                                                             *
*   (c) COPYRIGHT 2010 INFOR.  ALL RIGHTS RESERVED.           *
*   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *
*   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *
*   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL RIGHTS        *
*   RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE         *
*   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *
*                                                             *
*************************************************************** 
*/
/* $Archive: /ApplicationDB/Stored Procedures/ZLA_SetNextInvNumSp.sp $
 *
 * SL8.02 22 rs4588 Dahn Thu Mar 04 16:39:45 2010
 * rs4588 copyright header changes
 *
 * SL8.01 21 121685 calagappan Thu Aug 06 16:56:07 2009
 * Error:  Not One Sequence exists for Customer that has [Invoice Category: XXX] and [Invoice Date: XX/XX/XX] and [Type: Invoice]
 * Use cast instead of str function to convert invoice number.
 *
 * SL8.01 20 rs3953 Vlitmano Tue Aug 26 19:07:35 2008
 * RS3953 - Changed a Copyright header?
 *
 * SL8.01 19 109966 Clarsco Wed Aug 20 15:57:44 2008
 * Credit Memo number not incrementing correctly when a higher credit memo number from one site is attached to invoice in another site
 * Fixed Bug 109966
 * New action class NextNumSkip used when called by InvPostASp,  to hunt and skip conflicting credit memo numbers applied from another site.
 *
 * SL8.01 18 rs3953 Vlitmano Mon Aug 18 15:40:44 2008
 * Changed a Copyright header information(RS3959)
 *
 * SL8.00 17 102764 hcl-tiwasun Wed Jun 20 08:47:12 2007
 * Error received when processing an invoice. Unable to create an invoice
 * Issue# 102764
 * Made changes in ZLA_SetNextInvNumSp to use ExpandkyByType function in the filter condition to retrieve and update data from inv_Sequence table.
 *
 * SL8.00 16 RS2968 nkaleel Fri Feb 23 05:16:35 2007
 * changing copyright information(RS2968)
 *
 * SL8.00 15 RS2968 prahaladarao.hs Wed Jul 12 02:45:19 2006
 * RS 2968, Name change CopyRight Update.
 *
 * SL8.00 14 90636 djohnson Thu Feb 02 15:41:47 2006
 * Issue #90636, added an extra layer of transaction handling to make it work in SQL Server 2005 if called outside of a transaction from a trigger.
 *
 * SL7.04 13 91818 NThurn Fri Jan 06 13:17:19 2006
 * Inserted standard External Touch Point call.  (RS3177)
 *
 * SL7.04 12 90044 hcl-singnee Fri Dec 23 02:32:28 2005
 * Issue#  90044
 * Now dbo.ExpandKy() function is called only through other ExpandKy* functions.
 *
 * $NoKeywords: $
 */
CREATE PROCEDURE [dbo].[ZPV_SetNextInvNumSp] (
  @Category     InvCategoryType
, @InvDate      DateType
, @TableName    sysname
, @ColumnName   sysname
, @KeyLength    INT
, @Type         ArinvTypeType
, @NewInvNum    InvNumType OUTPUT
, @Action       NVARCHAR(200)
, @Infobar      Infobar  OUTPUT
, @ZlaDocId    ZlaDocumentIdType
, @ZlaInvNum   ZlaInvNumType	OUTPUT
, @ZlaAuthCode		ZlaAuthCode OUTPUT 
, @ZlaAuthEndDate	Date4Type	OUTPUT
)
AS

   -- Check for existence of Generic External Touch Point routine (this section was generated by SpETPCodeSp and inserted by CallETPs.exe):
   IF OBJECT_ID(N'dbo.EXTGEN_ZPV_SetNextInvNumSp') IS NOT NULL
   BEGIN
      DECLARE @EXTGEN_SpName sysname
      SET @EXTGEN_SpName = N'dbo.EXTGEN_ZPV_SetNextInvNumSp'
      -- Invoke the ETP routine, passing in (and out) this routine's parameters:
      DECLARE @EXTGEN_Severity int
      EXEC @EXTGEN_Severity = @EXTGEN_SpName
         @Category
         , @InvDate
         , @TableName
         , @ColumnName
         , @KeyLength
         , @Type
         , @NewInvNum OUTPUT
         , @Action
         , @Infobar OUTPUT
 
      -- ETP routine can RETURN 1 to signal that the remainder of this standard routine should now proceed:
      IF @EXTGEN_Severity <> 1
         RETURN @EXTGEN_Severity
   END
   -- End of Generic External Touch Point code.
 
DECLARE
  @Severity         INT
, @i                INT
, @RowPointer       RowPointerType
, @TableColumnName  SYSNAME
, @InvNum           DECIMAL(38,0)
, @Prefix           InvNumType
, @StartInvNum      InvNumType
, @LastInvNum       InvNumType
, @EndInvNum        InvNumType
, @NextInvNum       InvNumType
, @ErrMsg           NVARCHAR(200)
, @SeqType          NVARCHAR(16)
, @TempInvNum       InvNumType 

Declare 
@ZlaInvPrefix			ZlaInvPrefix

SET @Infobar = NULL
-- Override InvoiceCategory

SET @TableColumnName = @TableName + '.' + @ColumnName

DECLARE
  @Resource      SYSNAME
, @AppLockResult INT

SET @Resource = @TableColumnName

IF @Type = 'I'
  SET @SeqType = '@:ArinvType:I'
ELSE
  IF @Type = 'D'
    SET @SeqType = '@:ArinvType:D'
  ELSE
    SET @SeqType = '@:ArinvType:C'

--lock the table
BEGIN TRAN

EXEC @AppLockResult = sp_getapplock
  @Resource = @Resource
, @LockMode = 'exclusive'

IF @AppLockResult < 0
BEGIN
   EXEC @Severity = MsgAppSp @Infobar OUTPUT, 'E=CmdFailed0'
      , '@!ApplicationLock'
      , @Resource

   SET @Resource = 'E=AppLockFail' + CAST ( ABS(@AppLockResult) AS nvarchar)
   EXEC @Severity = MsgAppSp @Infobar OUTPUT, @Resource
   COMMIT TRAN
   RETURN @Severity
END

--get LastInvNum for Given Category and Invoice Date with Satus as Open

SELECT @RowPointer = RowPointer
 , @StartInvNum = start_inv_num
 , @EndInvNum = end_inv_num
 , @LastInvNum = last_inv_num
 , @ZlaInvPrefix = zla_inv_prefix
 , @ZlaAuthCode	= zla_auth_code 
 , @ZlaAuthEndDate	=  CASE
									WHEN ISNULL(zla_einvoice,0) = 0 
										THEN end_date	
										ELSE NULL
								END
   FROM inv_sequence
   WHERE inv_category = @Category
   --AND type = @Type
		AND zla_doc_id = @ZlaDocId
   AND @InvDate BETWEEN isnull(start_date,dbo.LowDate())
   AND isnull(end_date,dbo.HighDate())
   AND closed = 0
   

IF @EndInvNum = @LastInvNum AND (@Action = 'NextNum' Or @Action = 'NextNumSkip')
     BEGIN
         SET @Infobar = NULL
         SET @LastInvNum = NULL
         EXEC @Severity = MsgAppSp @Infobar OUTPUT, 'E=Exhausted'			
			, @Category
                        , @SeqType
         EXEC sp_releaseapplock  @Resource = @Resource
         COMMIT TRAN
         RETURN @Severity
     END

-- For first Invoice
   IF @LastInvNum IS NULL
     BEGIN
        SET  @NextInvNum = @StartInvNum
     END
   ELSE
     BEGIN
       --seprate alpha part
       SET @Prefix = dbo.PrefixOnly( @LastInvNum )
       SET @Prefix = ISNULL(@Prefix, '')
       SET @i = LEN(@Prefix)
       IF @i > @KeyLength
       BEGIN
         COMMIT TRAN
         RETURN 0
       END

       --seprate numeric part and increment it by one
       SET @InvNum = dbo.NumPart( @LastInvNum ) + 1

       --make new last invoice number
       SET @NextInvNum = @Prefix + ltrim ( CAST(@InvNum AS NVARCHAR(12)) )
       --expand key
       SET @NextInvNum = dbo.ExpandkyByType ( 'InvNumType',@NextInvNum )
			
				-- ZLA	
				IF ISNULL(@ZlaInvPrefix,'') <> ''
					BEGIN 
						SET @ZlaInvNum = '-' + ltrim ( CAST(@InvNum AS NVARCHAR(12)) )
						SET @ZlaInvNum = dbo.Expandky ( 9,@ZlaInvNum )
						SET @ZlaInvNum = SUBSTRING(@ZlaInvNum,2,8 )
						SET @ZlaInvNum = @ZlaInvPrefix + @ZlaInvNum
					END
					ELSE
					BEGIN
						SET @ZlaInvNum = @NextInvNum

				END -- ZLA

     END

IF @Action = 'NextNumSkip'
BEGIN
   -- Hunt and skip conflicting credit memo numbers applied from another site
   WHILE EXISTS(SELECT * FROM artran WHERE inv_num = @NextInvNum)
   BEGIN
      IF @EndInvNum = @NextInvNum
      BEGIN
         SET @Infobar = NULL
         SET @LastInvNum = NULL
         EXEC @Severity = MsgAppSp @Infobar OUTPUT, 'E=Exhausted'			
      	, @Category
                        , @SeqType
         EXEC sp_releaseapplock  @Resource = @Resource
         COMMIT TRAN
         RETURN @Severity
      END

      IF @LastInvNum IS NULL
      BEGIN
         --seprate alpha part
         SET @Prefix = dbo.PrefixOnly( @StartInvNum )
         SET @Prefix = ISNULL(@Prefix, '')
         SET @i = LEN(@Prefix)
         IF @i > @KeyLength
         BEGIN
         COMMIT TRAN
         RETURN 0
         END
         
         --seprate numeric part and increment it by one
         SET @InvNum = dbo.NumPart( @StartInvNum )
      END
   
      --increment it by one again
      SET @InvNum = @InvNum + 1
      
      --make new last invoice number
      SET @NextInvNum = @Prefix + ltrim ( CAST(@InvNum AS NVARCHAR(12)) )
      
      --expand key
      SET @NextInvNum = dbo.ExpandkyByType ( 'InvNumType',@NextInvNum )

					-- ZLA	
				IF ISNULL(@ZlaInvPrefix,'') <> ''
					BEGIN 
						SET @ZlaInvNum = '-' + ltrim ( CAST(@InvNum AS NVARCHAR(12)) )
						SET @ZlaInvNum = dbo.Expandky ( 9,@ZlaInvNum )
						SET @ZlaInvNum = SUBSTRING(@ZlaInvNum,2,8 )
						SET @ZlaInvNum = @ZlaInvPrefix + @ZlaInvNum
					END
					ELSE
					BEGIN
						SET @ZlaInvNum = @NextInvNum

				END -- ZLA
   
      CONTINUE
   END
END

IF @Action = 'NextNum' Or @Action = 'NextNumSkip'
   BEGIN
	SET  @NewInvNum = @NextInvNum
   END
ELSE IF @Action = 'DeletedNum'
   BEGIN
     IF @LastInvNum = @NewInvNum
        BEGIN
           --seprate numeric part and increment it by one
           SET @InvNum = dbo.NumPart( @LastInvNum ) - 1
           --make new last invoice number
           SET @NextInvNum = @Prefix + ltrim ( CAST(@InvNum AS NVARCHAR(12)) )
           --expand key
           SET @NextInvNum = dbo.ExpandkyByType ( 'InvNumType',@NextInvNum )

						-- ZLA	
						IF ISNULL(@ZlaInvPrefix,'') <> ''
							BEGIN 
								SET @ZlaInvNum = '-' + ltrim ( CAST(@InvNum AS NVARCHAR(12)) )
								SET @ZlaInvNum = dbo.Expandky ( 9,@ZlaInvNum )
								SET @ZlaInvNum = SUBSTRING(@ZlaInvNum,2,8 )
								SET @ZlaInvNum = @ZlaInvPrefix + @ZlaInvNum
							END
							ELSE
							BEGIN
								SET @ZlaInvNum = @NextInvNum

						END -- ZLA


          --update record
          IF NOT EXISTS (SELECT inv_num FROM inv_hdr WHERE inv_num=@NewInvNum)
             AND NOT EXISTS (SELECT inv_num FROM Proj_inv_hdr WHERE inv_num=@NewInvNum)
           BEGIN
             UPDATE inv_sequence SET last_inv_num =  @NextInvNum
             WHERE RowPointer = @RowPointer
             AND @NextInvNum between start_inv_num and end_inv_num
           END
        END
   END
ELSE IF @Action = 'AddedNum'
   BEGIN
        --update record
      
   SELECT @TempInvNum = dbo.MaxInvNum(@LastInvNum,@NextInvNum)
   SET @TempInvNum = dbo.ExpandkyByType ( 'InvNumType',@TempInvNum )  
      	
        IF EXISTS(SELECT 1 FROM inv_sequence WHERE RowPointer = @RowPointer 
                 AND @TempInvNum BETWEEN dbo.ExpandkyByType ( 'InvNumType',start_inv_num ) AND dbo.ExpandkyByType ( 'InvNumType',end_inv_num )) 
			
	        UPDATE inv_sequence SET last_inv_num =  @TempInvNum WHERE RowPointer = @RowPointer
	        AND @TempInvNum BETWEEN dbo.ExpandkyByType ( 'InvNumType',start_inv_num ) AND dbo.ExpandkyByType ( 'InvNumType',end_inv_num )
        ElSE
	      BEGIN
	         SET @Infobar = NULL
	         EXEC @Severity = MsgAppSp @Infobar OUTPUT, 'E=NoExistFor3'
				, '@inv_sequence'	
	                        , '@Customer'
	                        , '@inv_category'
	                        ,  @Category
	                        , '@arinv.inv_date'
	                        ,  @InvDate
	                        , '@inv_sequence.type'
	                        , @SeqType
                 COMMIT TRAN
	         RETURN @Severity
	      END
   END

EXEC sp_releaseapplock
  @Resource = @Resource
COMMIT TRAN

RETURN 0


GO

